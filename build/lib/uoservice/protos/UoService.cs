// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UoService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uoservice {

  /// <summary>Holder for reflection information generated from UoService.proto</summary>
  public static partial class UoServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for UoService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UoServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Vb1NlcnZpY2UucHJvdG8SCXVvc2VydmljZSIHCgVFbXB0eSKGAQoQR3Jw",
            "Y1BsYXllck9iamVjdBINCgVnYW1lWBgBIAEoDRINCgVnYW1lWRgCIAEoDRIO",
            "CgZzZXJpYWwYAyABKA0SDAoEbmFtZRgEIAEoCRINCgV0aXRsZRgFIAEoCRIW",
            "Cg5ob2xkSXRlbVNlcmlhbBgGIAEoDRIPCgd3YXJNb2RlGAcgASgIIooBChRH",
            "cnBjTW9iaWxlT2JqZWN0RGF0YRIQCghkaXN0YW5jZRgBIAEoDRINCgVnYW1l",
            "WBgCIAEoDRINCgVnYW1lWRgDIAEoDRIOCgZzZXJpYWwYBCABKA0SDAoEbmFt",
            "ZRgFIAEoCRINCgV0aXRsZRgGIAEoCRIVCg1ub3RvcmlldHlGbGFnGAcgASgN",
            "IrUBChJHcnBjSXRlbU9iamVjdERhdGESEAoIZGlzdGFuY2UYASABKA0SDQoF",
            "Z2FtZVgYAiABKA0SDQoFZ2FtZVkYAyABKA0SDgoGc2VyaWFsGAQgASgNEgwK",
            "BG5hbWUYBSABKAkSEAoIaXNDb3Jwc2UYBiABKAgSDgoGYW1vdW50GAcgASgN",
            "Eg0KBXByaWNlGAggASgNEg0KBWxheWVyGAkgASgNEhEKCWNvbnRhaW5lchgK",
            "IAEoDSLsAQoQR3JwY1BsYXllclN0YXR1cxILCgNzdHIYASABKA0SCwoDZGV4",
            "GAIgASgNEg4KBmludGVsbBgDIAEoDRIMCgRoaXRzGAQgASgNEg8KB2hpdHNN",
            "YXgYBSABKA0SDwoHc3RhbWluYRgGIAEoDRISCgpzdGFtaW5hTWF4GAcgASgN",
            "EgwKBG1hbmEYCCABKA0SDwoHbWFuYU1heBgJIAEoDRIMCgRnb2xkGAogASgN",
            "EhoKEnBoeXNpY2FsUmVzaXN0YW5jZRgLIAEoDRIOCgZ3ZWlnaHQYDCABKA0S",
            "EQoJd2VpZ2h0TWF4GA0gASgNInUKCUdycGNTa2lsbBIMCgRuYW1lGAEgASgJ",
            "Eg0KBWluZGV4GAIgASgNEhMKC2lzQ2xpY2thYmxlGAMgASgIEg0KBXZhbHVl",
            "GAQgASgNEgwKBGJhc2UYBSABKA0SCwoDY2FwGAYgASgNEgwKBGxvY2sYByAB",
            "KA0iOAoWR3JwY0dhbWVPYmplY3RJbmZvTGlzdBIOCgZnYW1lWHMYASADKA0S",
            "DgoGZ2FtZVlzGAIgAygNIi0KDUdycGNQb3B1cE1lbnUSDAoEdGV4dBgBIAEo",
            "CRIOCgZhY3RpdmUYAiABKAgiSwoOR3JwY0NsaWxvY0RhdGESDgoGc2VyaWFs",
            "GAEgASgNEgwKBHRleHQYAiABKAkSDQoFYWZmaXgYAyABKAkSDAoEbmFtZRgE",
            "IAEoCSI8ChFHcnBjUG9wdXBNZW51TGlzdBInCgVtZW51cxgBIAMoCzIYLnVv",
            "c2VydmljZS5HcnBjUG9wdXBNZW51IkQKEkdycGNDbGlsb2NEYXRhTGlzdBIu",
            "CgtjbGlsb2NEYXRhcxgBIAMoCzIZLnVvc2VydmljZS5HcnBjQ2xpbG9jRGF0",
            "YSJOChRHcnBjTW9iaWxlT2JqZWN0TGlzdBI2Cg1tb2JpbGVPYmplY3RzGAEg",
            "AygLMh8udW9zZXJ2aWNlLkdycGNNb2JpbGVPYmplY3REYXRhIkgKEkdycGNJ",
            "dGVtT2JqZWN0TGlzdBIyCgtpdGVtT2JqZWN0cxgBIAMoCzIdLnVvc2Vydmlj",
            "ZS5HcnBjSXRlbU9iamVjdERhdGEiHwoPU2VtYXBob3JlQWN0aW9uEgwKBG1v",
            "ZGUYASABKAkiFgoGQ29uZmlnEgwKBGluaXQYASABKAgiNQoNR3JwY1NraWxs",
            "TGlzdBIkCgZza2lsbHMYASADKAsyFC51b3NlcnZpY2UuR3JwY1NraWxsIukD",
            "CgZTdGF0ZXMSMQoMcGxheWVyT2JqZWN0GAEgASgLMhsudW9zZXJ2aWNlLkdy",
            "cGNQbGF5ZXJPYmplY3QSNAoNV29ybGRJdGVtTGlzdBgCIAEoCzIdLnVvc2Vy",
            "dmljZS5HcnBjSXRlbU9iamVjdExpc3QSOAoPV29ybGRNb2JpbGVMaXN0GAMg",
            "ASgLMh8udW9zZXJ2aWNlLkdycGNNb2JpbGVPYmplY3RMaXN0EjMKDXBvcHVw",
            "TWVudUxpc3QYBCABKAsyHC51b3NlcnZpY2UuR3JwY1BvcHVwTWVudUxpc3QS",
            "NQoOY2xpbG9jRGF0YUxpc3QYBSABKAsyHS51b3NlcnZpY2UuR3JwY0NsaWxv",
            "Y0RhdGFMaXN0EjEKDHBsYXllclN0YXR1cxgGIAEoCzIbLnVvc2VydmljZS5H",
            "cnBjUGxheWVyU3RhdHVzEjEKD3BsYXllclNraWxsTGlzdBgHIAEoCzIYLnVv",
            "c2VydmljZS5HcnBjU2tpbGxMaXN0Ej8KFHN0YXRpY09iamVjdEluZm9MaXN0",
            "GAggASgLMiEudW9zZXJ2aWNlLkdycGNHYW1lT2JqZWN0SW5mb0xpc3QSKQoN",
            "cmVwbGF5QWN0aW9ucxgJIAEoCzISLnVvc2VydmljZS5BY3Rpb25zIooBCgdB",
            "Y3Rpb25zEhIKCmFjdGlvblR5cGUYASABKA0SEgoKaXRlbVNlcmlhbBgCIAEo",
            "DRIUCgxtb2JpbGVTZXJpYWwYAyABKA0SFQoNd2Fsa0RpcmVjdGlvbhgEIAEo",
            "DRINCgVpbmRleBgFIAEoDRIOCgZhbW91bnQYBiABKA0SCwoDcnVuGAcgASgI",
            "Mo8DCglVb1NlcnZpY2USLQoFUmVzZXQSES51b3NlcnZpY2UuQ29uZmlnGhEu",
            "dW9zZXJ2aWNlLlN0YXRlcxIvCgdSZWFkT2JzEhEudW9zZXJ2aWNlLkNvbmZp",
            "ZxoRLnVvc2VydmljZS5TdGF0ZXMSMAoIV3JpdGVBY3QSEi51b3NlcnZpY2Uu",
            "QWN0aW9ucxoQLnVvc2VydmljZS5FbXB0eRJDChNBY3RTZW1hcGhvcmVDb250",
            "cm9sEhoudW9zZXJ2aWNlLlNlbWFwaG9yZUFjdGlvbhoQLnVvc2VydmljZS5F",
            "bXB0eRJDChNPYnNTZW1hcGhvcmVDb250cm9sEhoudW9zZXJ2aWNlLlNlbWFw",
            "aG9yZUFjdGlvbhoQLnVvc2VydmljZS5FbXB0eRIyCgpSZWFkUmVwbGF5EhEu",
            "dW9zZXJ2aWNlLkNvbmZpZxoRLnVvc2VydmljZS5TdGF0ZXMSMgoLUmVhZE1Q",
            "UUZpbGUSES51b3NlcnZpY2UuQ29uZmlnGhAudW9zZXJ2aWNlLkVtcHR5YgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Empty), global::Uoservice.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPlayerObject), global::Uoservice.GrpcPlayerObject.Parser, new[]{ "GameX", "GameY", "Serial", "Name", "Title", "HoldItemSerial", "WarMode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileObjectData), global::Uoservice.GrpcMobileObjectData.Parser, new[]{ "Distance", "GameX", "GameY", "Serial", "Name", "Title", "NotorietyFlag" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcItemObjectData), global::Uoservice.GrpcItemObjectData.Parser, new[]{ "Distance", "GameX", "GameY", "Serial", "Name", "IsCorpse", "Amount", "Price", "Layer", "Container" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPlayerStatus), global::Uoservice.GrpcPlayerStatus.Parser, new[]{ "Str", "Dex", "Intell", "Hits", "HitsMax", "Stamina", "StaminaMax", "Mana", "ManaMax", "Gold", "PhysicalResistance", "Weight", "WeightMax" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcSkill), global::Uoservice.GrpcSkill.Parser, new[]{ "Name", "Index", "IsClickable", "Value", "Base", "Cap", "Lock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcGameObjectInfoList), global::Uoservice.GrpcGameObjectInfoList.Parser, new[]{ "GameXs", "GameYs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPopupMenu), global::Uoservice.GrpcPopupMenu.Parser, new[]{ "Text", "Active" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcClilocData), global::Uoservice.GrpcClilocData.Parser, new[]{ "Serial", "Text", "Affix", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPopupMenuList), global::Uoservice.GrpcPopupMenuList.Parser, new[]{ "Menus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcClilocDataList), global::Uoservice.GrpcClilocDataList.Parser, new[]{ "ClilocDatas" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileObjectList), global::Uoservice.GrpcMobileObjectList.Parser, new[]{ "MobileObjects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcItemObjectList), global::Uoservice.GrpcItemObjectList.Parser, new[]{ "ItemObjects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.SemaphoreAction), global::Uoservice.SemaphoreAction.Parser, new[]{ "Mode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Config), global::Uoservice.Config.Parser, new[]{ "Init" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcSkillList), global::Uoservice.GrpcSkillList.Parser, new[]{ "Skills" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.States), global::Uoservice.States.Parser, new[]{ "PlayerObject", "WorldItemList", "WorldMobileList", "PopupMenuList", "ClilocDataList", "PlayerStatus", "PlayerSkillList", "StaticObjectInfoList", "ReplayActions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Actions), global::Uoservice.Actions.Parser, new[]{ "ActionType", "ItemSerial", "MobileSerial", "WalkDirection", "Index", "Amount", "Run" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GrpcPlayerObject : pb::IMessage<GrpcPlayerObject> {
    private static readonly pb::MessageParser<GrpcPlayerObject> _parser = new pb::MessageParser<GrpcPlayerObject>(() => new GrpcPlayerObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPlayerObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerObject(GrpcPlayerObject other) : this() {
      gameX_ = other.gameX_;
      gameY_ = other.gameY_;
      serial_ = other.serial_;
      name_ = other.name_;
      title_ = other.title_;
      holdItemSerial_ = other.holdItemSerial_;
      warMode_ = other.warMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerObject Clone() {
      return new GrpcPlayerObject(this);
    }

    /// <summary>Field number for the "gameX" field.</summary>
    public const int GameXFieldNumber = 1;
    private uint gameX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameX {
      get { return gameX_; }
      set {
        gameX_ = value;
      }
    }

    /// <summary>Field number for the "gameY" field.</summary>
    public const int GameYFieldNumber = 2;
    private uint gameY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameY {
      get { return gameY_; }
      set {
        gameY_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 3;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "holdItemSerial" field.</summary>
    public const int HoldItemSerialFieldNumber = 6;
    private uint holdItemSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HoldItemSerial {
      get { return holdItemSerial_; }
      set {
        holdItemSerial_ = value;
      }
    }

    /// <summary>Field number for the "warMode" field.</summary>
    public const int WarModeFieldNumber = 7;
    private bool warMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WarMode {
      get { return warMode_; }
      set {
        warMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPlayerObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPlayerObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameX != other.GameX) return false;
      if (GameY != other.GameY) return false;
      if (Serial != other.Serial) return false;
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (HoldItemSerial != other.HoldItemSerial) return false;
      if (WarMode != other.WarMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameX != 0) hash ^= GameX.GetHashCode();
      if (GameY != 0) hash ^= GameY.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (HoldItemSerial != 0) hash ^= HoldItemSerial.GetHashCode();
      if (WarMode != false) hash ^= WarMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameX != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameX);
      }
      if (GameY != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameY);
      }
      if (Serial != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Serial);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (HoldItemSerial != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(HoldItemSerial);
      }
      if (WarMode != false) {
        output.WriteRawTag(56);
        output.WriteBool(WarMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameX);
      }
      if (GameY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameY);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HoldItemSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HoldItemSerial);
      }
      if (WarMode != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPlayerObject other) {
      if (other == null) {
        return;
      }
      if (other.GameX != 0) {
        GameX = other.GameX;
      }
      if (other.GameY != 0) {
        GameY = other.GameY;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.HoldItemSerial != 0) {
        HoldItemSerial = other.HoldItemSerial;
      }
      if (other.WarMode != false) {
        WarMode = other.WarMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameX = input.ReadUInt32();
            break;
          }
          case 16: {
            GameY = input.ReadUInt32();
            break;
          }
          case 24: {
            Serial = input.ReadUInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 48: {
            HoldItemSerial = input.ReadUInt32();
            break;
          }
          case 56: {
            WarMode = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMobileObjectData : pb::IMessage<GrpcMobileObjectData> {
    private static readonly pb::MessageParser<GrpcMobileObjectData> _parser = new pb::MessageParser<GrpcMobileObjectData>(() => new GrpcMobileObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectData(GrpcMobileObjectData other) : this() {
      distance_ = other.distance_;
      gameX_ = other.gameX_;
      gameY_ = other.gameY_;
      serial_ = other.serial_;
      name_ = other.name_;
      title_ = other.title_;
      notorietyFlag_ = other.notorietyFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectData Clone() {
      return new GrpcMobileObjectData(this);
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 1;
    private uint distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "gameX" field.</summary>
    public const int GameXFieldNumber = 2;
    private uint gameX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameX {
      get { return gameX_; }
      set {
        gameX_ = value;
      }
    }

    /// <summary>Field number for the "gameY" field.</summary>
    public const int GameYFieldNumber = 3;
    private uint gameY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameY {
      get { return gameY_; }
      set {
        gameY_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 4;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 6;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notorietyFlag" field.</summary>
    public const int NotorietyFlagFieldNumber = 7;
    private uint notorietyFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NotorietyFlag {
      get { return notorietyFlag_; }
      set {
        notorietyFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Distance != other.Distance) return false;
      if (GameX != other.GameX) return false;
      if (GameY != other.GameY) return false;
      if (Serial != other.Serial) return false;
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (NotorietyFlag != other.NotorietyFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (GameX != 0) hash ^= GameX.GetHashCode();
      if (GameY != 0) hash ^= GameY.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (NotorietyFlag != 0) hash ^= NotorietyFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Distance != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Distance);
      }
      if (GameX != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameX);
      }
      if (GameY != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameY);
      }
      if (Serial != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Serial);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Title);
      }
      if (NotorietyFlag != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(NotorietyFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distance);
      }
      if (GameX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameX);
      }
      if (GameY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameY);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (NotorietyFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotorietyFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileObjectData other) {
      if (other == null) {
        return;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.GameX != 0) {
        GameX = other.GameX;
      }
      if (other.GameY != 0) {
        GameY = other.GameY;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.NotorietyFlag != 0) {
        NotorietyFlag = other.NotorietyFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Distance = input.ReadUInt32();
            break;
          }
          case 16: {
            GameX = input.ReadUInt32();
            break;
          }
          case 24: {
            GameY = input.ReadUInt32();
            break;
          }
          case 32: {
            Serial = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Title = input.ReadString();
            break;
          }
          case 56: {
            NotorietyFlag = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcItemObjectData : pb::IMessage<GrpcItemObjectData> {
    private static readonly pb::MessageParser<GrpcItemObjectData> _parser = new pb::MessageParser<GrpcItemObjectData>(() => new GrpcItemObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcItemObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectData(GrpcItemObjectData other) : this() {
      distance_ = other.distance_;
      gameX_ = other.gameX_;
      gameY_ = other.gameY_;
      serial_ = other.serial_;
      name_ = other.name_;
      isCorpse_ = other.isCorpse_;
      amount_ = other.amount_;
      price_ = other.price_;
      layer_ = other.layer_;
      container_ = other.container_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectData Clone() {
      return new GrpcItemObjectData(this);
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 1;
    private uint distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "gameX" field.</summary>
    public const int GameXFieldNumber = 2;
    private uint gameX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameX {
      get { return gameX_; }
      set {
        gameX_ = value;
      }
    }

    /// <summary>Field number for the "gameY" field.</summary>
    public const int GameYFieldNumber = 3;
    private uint gameY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameY {
      get { return gameY_; }
      set {
        gameY_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 4;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isCorpse" field.</summary>
    public const int IsCorpseFieldNumber = 6;
    private bool isCorpse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCorpse {
      get { return isCorpse_; }
      set {
        isCorpse_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 7;
    private uint amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 8;
    private uint price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 9;
    private uint layer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 10;
    private uint container_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Container {
      get { return container_; }
      set {
        container_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcItemObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcItemObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Distance != other.Distance) return false;
      if (GameX != other.GameX) return false;
      if (GameY != other.GameY) return false;
      if (Serial != other.Serial) return false;
      if (Name != other.Name) return false;
      if (IsCorpse != other.IsCorpse) return false;
      if (Amount != other.Amount) return false;
      if (Price != other.Price) return false;
      if (Layer != other.Layer) return false;
      if (Container != other.Container) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (GameX != 0) hash ^= GameX.GetHashCode();
      if (GameY != 0) hash ^= GameY.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IsCorpse != false) hash ^= IsCorpse.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (Layer != 0) hash ^= Layer.GetHashCode();
      if (Container != 0) hash ^= Container.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Distance != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Distance);
      }
      if (GameX != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameX);
      }
      if (GameY != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameY);
      }
      if (Serial != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Serial);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (IsCorpse != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsCorpse);
      }
      if (Amount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Amount);
      }
      if (Price != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Price);
      }
      if (Layer != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Layer);
      }
      if (Container != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Container);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distance);
      }
      if (GameX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameX);
      }
      if (GameY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameY);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IsCorpse != false) {
        size += 1 + 1;
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Price);
      }
      if (Layer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Layer);
      }
      if (Container != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Container);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcItemObjectData other) {
      if (other == null) {
        return;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.GameX != 0) {
        GameX = other.GameX;
      }
      if (other.GameY != 0) {
        GameY = other.GameY;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IsCorpse != false) {
        IsCorpse = other.IsCorpse;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.Layer != 0) {
        Layer = other.Layer;
      }
      if (other.Container != 0) {
        Container = other.Container;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Distance = input.ReadUInt32();
            break;
          }
          case 16: {
            GameX = input.ReadUInt32();
            break;
          }
          case 24: {
            GameY = input.ReadUInt32();
            break;
          }
          case 32: {
            Serial = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            IsCorpse = input.ReadBool();
            break;
          }
          case 56: {
            Amount = input.ReadUInt32();
            break;
          }
          case 64: {
            Price = input.ReadUInt32();
            break;
          }
          case 72: {
            Layer = input.ReadUInt32();
            break;
          }
          case 80: {
            Container = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPlayerStatus : pb::IMessage<GrpcPlayerStatus> {
    private static readonly pb::MessageParser<GrpcPlayerStatus> _parser = new pb::MessageParser<GrpcPlayerStatus>(() => new GrpcPlayerStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPlayerStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerStatus(GrpcPlayerStatus other) : this() {
      str_ = other.str_;
      dex_ = other.dex_;
      intell_ = other.intell_;
      hits_ = other.hits_;
      hitsMax_ = other.hitsMax_;
      stamina_ = other.stamina_;
      staminaMax_ = other.staminaMax_;
      mana_ = other.mana_;
      manaMax_ = other.manaMax_;
      gold_ = other.gold_;
      physicalResistance_ = other.physicalResistance_;
      weight_ = other.weight_;
      weightMax_ = other.weightMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerStatus Clone() {
      return new GrpcPlayerStatus(this);
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 1;
    private uint str_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "dex" field.</summary>
    public const int DexFieldNumber = 2;
    private uint dex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dex {
      get { return dex_; }
      set {
        dex_ = value;
      }
    }

    /// <summary>Field number for the "intell" field.</summary>
    public const int IntellFieldNumber = 3;
    private uint intell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Intell {
      get { return intell_; }
      set {
        intell_ = value;
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 4;
    private uint hits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hits {
      get { return hits_; }
      set {
        hits_ = value;
      }
    }

    /// <summary>Field number for the "hitsMax" field.</summary>
    public const int HitsMaxFieldNumber = 5;
    private uint hitsMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HitsMax {
      get { return hitsMax_; }
      set {
        hitsMax_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 6;
    private uint stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    /// <summary>Field number for the "staminaMax" field.</summary>
    public const int StaminaMaxFieldNumber = 7;
    private uint staminaMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StaminaMax {
      get { return staminaMax_; }
      set {
        staminaMax_ = value;
      }
    }

    /// <summary>Field number for the "mana" field.</summary>
    public const int ManaFieldNumber = 8;
    private uint mana_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Mana {
      get { return mana_; }
      set {
        mana_ = value;
      }
    }

    /// <summary>Field number for the "manaMax" field.</summary>
    public const int ManaMaxFieldNumber = 9;
    private uint manaMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ManaMax {
      get { return manaMax_; }
      set {
        manaMax_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 10;
    private uint gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "physicalResistance" field.</summary>
    public const int PhysicalResistanceFieldNumber = 11;
    private uint physicalResistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PhysicalResistance {
      get { return physicalResistance_; }
      set {
        physicalResistance_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 12;
    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "weightMax" field.</summary>
    public const int WeightMaxFieldNumber = 13;
    private uint weightMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WeightMax {
      get { return weightMax_; }
      set {
        weightMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPlayerStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPlayerStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Str != other.Str) return false;
      if (Dex != other.Dex) return false;
      if (Intell != other.Intell) return false;
      if (Hits != other.Hits) return false;
      if (HitsMax != other.HitsMax) return false;
      if (Stamina != other.Stamina) return false;
      if (StaminaMax != other.StaminaMax) return false;
      if (Mana != other.Mana) return false;
      if (ManaMax != other.ManaMax) return false;
      if (Gold != other.Gold) return false;
      if (PhysicalResistance != other.PhysicalResistance) return false;
      if (Weight != other.Weight) return false;
      if (WeightMax != other.WeightMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Str != 0) hash ^= Str.GetHashCode();
      if (Dex != 0) hash ^= Dex.GetHashCode();
      if (Intell != 0) hash ^= Intell.GetHashCode();
      if (Hits != 0) hash ^= Hits.GetHashCode();
      if (HitsMax != 0) hash ^= HitsMax.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      if (StaminaMax != 0) hash ^= StaminaMax.GetHashCode();
      if (Mana != 0) hash ^= Mana.GetHashCode();
      if (ManaMax != 0) hash ^= ManaMax.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (PhysicalResistance != 0) hash ^= PhysicalResistance.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (WeightMax != 0) hash ^= WeightMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Str != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Str);
      }
      if (Dex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Dex);
      }
      if (Intell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Intell);
      }
      if (Hits != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Hits);
      }
      if (HitsMax != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(HitsMax);
      }
      if (Stamina != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Stamina);
      }
      if (StaminaMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(StaminaMax);
      }
      if (Mana != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Mana);
      }
      if (ManaMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ManaMax);
      }
      if (Gold != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Gold);
      }
      if (PhysicalResistance != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PhysicalResistance);
      }
      if (Weight != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Weight);
      }
      if (WeightMax != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WeightMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Str != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Str);
      }
      if (Dex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dex);
      }
      if (Intell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Intell);
      }
      if (Hits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hits);
      }
      if (HitsMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitsMax);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stamina);
      }
      if (StaminaMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StaminaMax);
      }
      if (Mana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mana);
      }
      if (ManaMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ManaMax);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gold);
      }
      if (PhysicalResistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PhysicalResistance);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (WeightMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeightMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPlayerStatus other) {
      if (other == null) {
        return;
      }
      if (other.Str != 0) {
        Str = other.Str;
      }
      if (other.Dex != 0) {
        Dex = other.Dex;
      }
      if (other.Intell != 0) {
        Intell = other.Intell;
      }
      if (other.Hits != 0) {
        Hits = other.Hits;
      }
      if (other.HitsMax != 0) {
        HitsMax = other.HitsMax;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
      if (other.StaminaMax != 0) {
        StaminaMax = other.StaminaMax;
      }
      if (other.Mana != 0) {
        Mana = other.Mana;
      }
      if (other.ManaMax != 0) {
        ManaMax = other.ManaMax;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.PhysicalResistance != 0) {
        PhysicalResistance = other.PhysicalResistance;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      if (other.WeightMax != 0) {
        WeightMax = other.WeightMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Str = input.ReadUInt32();
            break;
          }
          case 16: {
            Dex = input.ReadUInt32();
            break;
          }
          case 24: {
            Intell = input.ReadUInt32();
            break;
          }
          case 32: {
            Hits = input.ReadUInt32();
            break;
          }
          case 40: {
            HitsMax = input.ReadUInt32();
            break;
          }
          case 48: {
            Stamina = input.ReadUInt32();
            break;
          }
          case 56: {
            StaminaMax = input.ReadUInt32();
            break;
          }
          case 64: {
            Mana = input.ReadUInt32();
            break;
          }
          case 72: {
            ManaMax = input.ReadUInt32();
            break;
          }
          case 80: {
            Gold = input.ReadUInt32();
            break;
          }
          case 88: {
            PhysicalResistance = input.ReadUInt32();
            break;
          }
          case 96: {
            Weight = input.ReadUInt32();
            break;
          }
          case 104: {
            WeightMax = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcSkill : pb::IMessage<GrpcSkill> {
    private static readonly pb::MessageParser<GrpcSkill> _parser = new pb::MessageParser<GrpcSkill>(() => new GrpcSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkill(GrpcSkill other) : this() {
      name_ = other.name_;
      index_ = other.index_;
      isClickable_ = other.isClickable_;
      value_ = other.value_;
      base_ = other.base_;
      cap_ = other.cap_;
      lock_ = other.lock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkill Clone() {
      return new GrpcSkill(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "isClickable" field.</summary>
    public const int IsClickableFieldNumber = 3;
    private bool isClickable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClickable {
      get { return isClickable_; }
      set {
        isClickable_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private uint value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 5;
    private uint base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "cap" field.</summary>
    public const int CapFieldNumber = 6;
    private uint cap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cap {
      get { return cap_; }
      set {
        cap_ = value;
      }
    }

    /// <summary>Field number for the "lock" field.</summary>
    public const int LockFieldNumber = 7;
    private uint lock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Lock {
      get { return lock_; }
      set {
        lock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Index != other.Index) return false;
      if (IsClickable != other.IsClickable) return false;
      if (Value != other.Value) return false;
      if (Base != other.Base) return false;
      if (Cap != other.Cap) return false;
      if (Lock != other.Lock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (IsClickable != false) hash ^= IsClickable.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (Base != 0) hash ^= Base.GetHashCode();
      if (Cap != 0) hash ^= Cap.GetHashCode();
      if (Lock != 0) hash ^= Lock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (IsClickable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsClickable);
      }
      if (Value != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Value);
      }
      if (Base != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Base);
      }
      if (Cap != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Cap);
      }
      if (Lock != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Lock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (IsClickable != false) {
        size += 1 + 1;
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
      }
      if (Base != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Base);
      }
      if (Cap != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cap);
      }
      if (Lock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Lock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcSkill other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.IsClickable != false) {
        IsClickable = other.IsClickable;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.Base != 0) {
        Base = other.Base;
      }
      if (other.Cap != 0) {
        Cap = other.Cap;
      }
      if (other.Lock != 0) {
        Lock = other.Lock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
          case 24: {
            IsClickable = input.ReadBool();
            break;
          }
          case 32: {
            Value = input.ReadUInt32();
            break;
          }
          case 40: {
            Base = input.ReadUInt32();
            break;
          }
          case 48: {
            Cap = input.ReadUInt32();
            break;
          }
          case 56: {
            Lock = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcGameObjectInfoList : pb::IMessage<GrpcGameObjectInfoList> {
    private static readonly pb::MessageParser<GrpcGameObjectInfoList> _parser = new pb::MessageParser<GrpcGameObjectInfoList>(() => new GrpcGameObjectInfoList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcGameObjectInfoList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcGameObjectInfoList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcGameObjectInfoList(GrpcGameObjectInfoList other) : this() {
      gameXs_ = other.gameXs_.Clone();
      gameYs_ = other.gameYs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcGameObjectInfoList Clone() {
      return new GrpcGameObjectInfoList(this);
    }

    /// <summary>Field number for the "gameXs" field.</summary>
    public const int GameXsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_gameXs_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> gameXs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> GameXs {
      get { return gameXs_; }
    }

    /// <summary>Field number for the "gameYs" field.</summary>
    public const int GameYsFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_gameYs_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> gameYs_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> GameYs {
      get { return gameYs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcGameObjectInfoList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcGameObjectInfoList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameXs_.Equals(other.gameXs_)) return false;
      if(!gameYs_.Equals(other.gameYs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameXs_.GetHashCode();
      hash ^= gameYs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gameXs_.WriteTo(output, _repeated_gameXs_codec);
      gameYs_.WriteTo(output, _repeated_gameYs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gameXs_.CalculateSize(_repeated_gameXs_codec);
      size += gameYs_.CalculateSize(_repeated_gameYs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcGameObjectInfoList other) {
      if (other == null) {
        return;
      }
      gameXs_.Add(other.gameXs_);
      gameYs_.Add(other.gameYs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            gameXs_.AddEntriesFrom(input, _repeated_gameXs_codec);
            break;
          }
          case 18:
          case 16: {
            gameYs_.AddEntriesFrom(input, _repeated_gameYs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopupMenu : pb::IMessage<GrpcPopupMenu> {
    private static readonly pb::MessageParser<GrpcPopupMenu> _parser = new pb::MessageParser<GrpcPopupMenu>(() => new GrpcPopupMenu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopupMenu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenu(GrpcPopupMenu other) : this() {
      text_ = other.text_;
      active_ = other.active_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenu Clone() {
      return new GrpcPopupMenu(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 2;
    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopupMenu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopupMenu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Active != other.Active) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Active != false) {
        output.WriteRawTag(16);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Active != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopupMenu other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcClilocData : pb::IMessage<GrpcClilocData> {
    private static readonly pb::MessageParser<GrpcClilocData> _parser = new pb::MessageParser<GrpcClilocData>(() => new GrpcClilocData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcClilocData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocData(GrpcClilocData other) : this() {
      serial_ = other.serial_;
      text_ = other.text_;
      affix_ = other.affix_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocData Clone() {
      return new GrpcClilocData(this);
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 1;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "affix" field.</summary>
    public const int AffixFieldNumber = 3;
    private string affix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Affix {
      get { return affix_; }
      set {
        affix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcClilocData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcClilocData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Serial != other.Serial) return false;
      if (Text != other.Text) return false;
      if (Affix != other.Affix) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Affix.Length != 0) hash ^= Affix.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Serial != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Serial);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (Affix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Affix);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Affix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Affix);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcClilocData other) {
      if (other == null) {
        return;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Affix.Length != 0) {
        Affix = other.Affix;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Serial = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            Affix = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopupMenuList : pb::IMessage<GrpcPopupMenuList> {
    private static readonly pb::MessageParser<GrpcPopupMenuList> _parser = new pb::MessageParser<GrpcPopupMenuList>(() => new GrpcPopupMenuList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopupMenuList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenuList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenuList(GrpcPopupMenuList other) : this() {
      menus_ = other.menus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenuList Clone() {
      return new GrpcPopupMenuList(this);
    }

    /// <summary>Field number for the "menus" field.</summary>
    public const int MenusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcPopupMenu> _repeated_menus_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcPopupMenu.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcPopupMenu> menus_ = new pbc::RepeatedField<global::Uoservice.GrpcPopupMenu>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcPopupMenu> Menus {
      get { return menus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopupMenuList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopupMenuList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!menus_.Equals(other.menus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= menus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      menus_.WriteTo(output, _repeated_menus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += menus_.CalculateSize(_repeated_menus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopupMenuList other) {
      if (other == null) {
        return;
      }
      menus_.Add(other.menus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            menus_.AddEntriesFrom(input, _repeated_menus_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcClilocDataList : pb::IMessage<GrpcClilocDataList> {
    private static readonly pb::MessageParser<GrpcClilocDataList> _parser = new pb::MessageParser<GrpcClilocDataList>(() => new GrpcClilocDataList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcClilocDataList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocDataList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocDataList(GrpcClilocDataList other) : this() {
      clilocDatas_ = other.clilocDatas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocDataList Clone() {
      return new GrpcClilocDataList(this);
    }

    /// <summary>Field number for the "clilocDatas" field.</summary>
    public const int ClilocDatasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcClilocData> _repeated_clilocDatas_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcClilocData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcClilocData> clilocDatas_ = new pbc::RepeatedField<global::Uoservice.GrpcClilocData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcClilocData> ClilocDatas {
      get { return clilocDatas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcClilocDataList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcClilocDataList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clilocDatas_.Equals(other.clilocDatas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clilocDatas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clilocDatas_.WriteTo(output, _repeated_clilocDatas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clilocDatas_.CalculateSize(_repeated_clilocDatas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcClilocDataList other) {
      if (other == null) {
        return;
      }
      clilocDatas_.Add(other.clilocDatas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clilocDatas_.AddEntriesFrom(input, _repeated_clilocDatas_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMobileObjectList : pb::IMessage<GrpcMobileObjectList> {
    private static readonly pb::MessageParser<GrpcMobileObjectList> _parser = new pb::MessageParser<GrpcMobileObjectList>(() => new GrpcMobileObjectList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileObjectList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList(GrpcMobileObjectList other) : this() {
      mobileObjects_ = other.mobileObjects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList Clone() {
      return new GrpcMobileObjectList(this);
    }

    /// <summary>Field number for the "mobileObjects" field.</summary>
    public const int MobileObjectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcMobileObjectData> _repeated_mobileObjects_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcMobileObjectData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcMobileObjectData> mobileObjects_ = new pbc::RepeatedField<global::Uoservice.GrpcMobileObjectData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcMobileObjectData> MobileObjects {
      get { return mobileObjects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileObjectList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileObjectList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mobileObjects_.Equals(other.mobileObjects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mobileObjects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mobileObjects_.WriteTo(output, _repeated_mobileObjects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mobileObjects_.CalculateSize(_repeated_mobileObjects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileObjectList other) {
      if (other == null) {
        return;
      }
      mobileObjects_.Add(other.mobileObjects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mobileObjects_.AddEntriesFrom(input, _repeated_mobileObjects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcItemObjectList : pb::IMessage<GrpcItemObjectList> {
    private static readonly pb::MessageParser<GrpcItemObjectList> _parser = new pb::MessageParser<GrpcItemObjectList>(() => new GrpcItemObjectList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcItemObjectList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectList(GrpcItemObjectList other) : this() {
      itemObjects_ = other.itemObjects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectList Clone() {
      return new GrpcItemObjectList(this);
    }

    /// <summary>Field number for the "itemObjects" field.</summary>
    public const int ItemObjectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcItemObjectData> _repeated_itemObjects_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcItemObjectData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcItemObjectData> itemObjects_ = new pbc::RepeatedField<global::Uoservice.GrpcItemObjectData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcItemObjectData> ItemObjects {
      get { return itemObjects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcItemObjectList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcItemObjectList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemObjects_.Equals(other.itemObjects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemObjects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemObjects_.WriteTo(output, _repeated_itemObjects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemObjects_.CalculateSize(_repeated_itemObjects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcItemObjectList other) {
      if (other == null) {
        return;
      }
      itemObjects_.Add(other.itemObjects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemObjects_.AddEntriesFrom(input, _repeated_itemObjects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SemaphoreAction : pb::IMessage<SemaphoreAction> {
    private static readonly pb::MessageParser<SemaphoreAction> _parser = new pb::MessageParser<SemaphoreAction>(() => new SemaphoreAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SemaphoreAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction(SemaphoreAction other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction Clone() {
      return new SemaphoreAction(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private string mode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SemaphoreAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SemaphoreAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SemaphoreAction other) {
      if (other == null) {
        return;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Config : pb::IMessage<Config> {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      init_ = other.init_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "init" field.</summary>
    public const int InitFieldNumber = 1;
    private bool init_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Init {
      get { return init_; }
      set {
        init_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Init != other.Init) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Init != false) hash ^= Init.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Init != false) {
        output.WriteRawTag(8);
        output.WriteBool(Init);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Init != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.Init != false) {
        Init = other.Init;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Init = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcSkillList : pb::IMessage<GrpcSkillList> {
    private static readonly pb::MessageParser<GrpcSkillList> _parser = new pb::MessageParser<GrpcSkillList>(() => new GrpcSkillList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcSkillList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkillList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkillList(GrpcSkillList other) : this() {
      skills_ = other.skills_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkillList Clone() {
      return new GrpcSkillList(this);
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcSkill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcSkill.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcSkill> skills_ = new pbc::RepeatedField<global::Uoservice.GrpcSkill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcSkill> Skills {
      get { return skills_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcSkillList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcSkillList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!skills_.Equals(other.skills_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= skills_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      skills_.WriteTo(output, _repeated_skills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcSkillList other) {
      if (other == null) {
        return;
      }
      skills_.Add(other.skills_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class States : pb::IMessage<States> {
    private static readonly pb::MessageParser<States> _parser = new pb::MessageParser<States>(() => new States());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<States> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States(States other) : this() {
      playerObject_ = other.playerObject_ != null ? other.playerObject_.Clone() : null;
      worldItemList_ = other.worldItemList_ != null ? other.worldItemList_.Clone() : null;
      worldMobileList_ = other.worldMobileList_ != null ? other.worldMobileList_.Clone() : null;
      popupMenuList_ = other.popupMenuList_ != null ? other.popupMenuList_.Clone() : null;
      clilocDataList_ = other.clilocDataList_ != null ? other.clilocDataList_.Clone() : null;
      playerStatus_ = other.playerStatus_ != null ? other.playerStatus_.Clone() : null;
      playerSkillList_ = other.playerSkillList_ != null ? other.playerSkillList_.Clone() : null;
      staticObjectInfoList_ = other.staticObjectInfoList_ != null ? other.staticObjectInfoList_.Clone() : null;
      replayActions_ = other.replayActions_ != null ? other.replayActions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States Clone() {
      return new States(this);
    }

    /// <summary>Field number for the "playerObject" field.</summary>
    public const int PlayerObjectFieldNumber = 1;
    private global::Uoservice.GrpcPlayerObject playerObject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcPlayerObject PlayerObject {
      get { return playerObject_; }
      set {
        playerObject_ = value;
      }
    }

    /// <summary>Field number for the "WorldItemList" field.</summary>
    public const int WorldItemListFieldNumber = 2;
    private global::Uoservice.GrpcItemObjectList worldItemList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcItemObjectList WorldItemList {
      get { return worldItemList_; }
      set {
        worldItemList_ = value;
      }
    }

    /// <summary>Field number for the "WorldMobileList" field.</summary>
    public const int WorldMobileListFieldNumber = 3;
    private global::Uoservice.GrpcMobileObjectList worldMobileList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcMobileObjectList WorldMobileList {
      get { return worldMobileList_; }
      set {
        worldMobileList_ = value;
      }
    }

    /// <summary>Field number for the "popupMenuList" field.</summary>
    public const int PopupMenuListFieldNumber = 4;
    private global::Uoservice.GrpcPopupMenuList popupMenuList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcPopupMenuList PopupMenuList {
      get { return popupMenuList_; }
      set {
        popupMenuList_ = value;
      }
    }

    /// <summary>Field number for the "clilocDataList" field.</summary>
    public const int ClilocDataListFieldNumber = 5;
    private global::Uoservice.GrpcClilocDataList clilocDataList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcClilocDataList ClilocDataList {
      get { return clilocDataList_; }
      set {
        clilocDataList_ = value;
      }
    }

    /// <summary>Field number for the "playerStatus" field.</summary>
    public const int PlayerStatusFieldNumber = 6;
    private global::Uoservice.GrpcPlayerStatus playerStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcPlayerStatus PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "playerSkillList" field.</summary>
    public const int PlayerSkillListFieldNumber = 7;
    private global::Uoservice.GrpcSkillList playerSkillList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcSkillList PlayerSkillList {
      get { return playerSkillList_; }
      set {
        playerSkillList_ = value;
      }
    }

    /// <summary>Field number for the "staticObjectInfoList" field.</summary>
    public const int StaticObjectInfoListFieldNumber = 8;
    private global::Uoservice.GrpcGameObjectInfoList staticObjectInfoList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcGameObjectInfoList StaticObjectInfoList {
      get { return staticObjectInfoList_; }
      set {
        staticObjectInfoList_ = value;
      }
    }

    /// <summary>Field number for the "replayActions" field.</summary>
    public const int ReplayActionsFieldNumber = 9;
    private global::Uoservice.Actions replayActions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.Actions ReplayActions {
      get { return replayActions_; }
      set {
        replayActions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as States);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(States other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerObject, other.PlayerObject)) return false;
      if (!object.Equals(WorldItemList, other.WorldItemList)) return false;
      if (!object.Equals(WorldMobileList, other.WorldMobileList)) return false;
      if (!object.Equals(PopupMenuList, other.PopupMenuList)) return false;
      if (!object.Equals(ClilocDataList, other.ClilocDataList)) return false;
      if (!object.Equals(PlayerStatus, other.PlayerStatus)) return false;
      if (!object.Equals(PlayerSkillList, other.PlayerSkillList)) return false;
      if (!object.Equals(StaticObjectInfoList, other.StaticObjectInfoList)) return false;
      if (!object.Equals(ReplayActions, other.ReplayActions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerObject_ != null) hash ^= PlayerObject.GetHashCode();
      if (worldItemList_ != null) hash ^= WorldItemList.GetHashCode();
      if (worldMobileList_ != null) hash ^= WorldMobileList.GetHashCode();
      if (popupMenuList_ != null) hash ^= PopupMenuList.GetHashCode();
      if (clilocDataList_ != null) hash ^= ClilocDataList.GetHashCode();
      if (playerStatus_ != null) hash ^= PlayerStatus.GetHashCode();
      if (playerSkillList_ != null) hash ^= PlayerSkillList.GetHashCode();
      if (staticObjectInfoList_ != null) hash ^= StaticObjectInfoList.GetHashCode();
      if (replayActions_ != null) hash ^= ReplayActions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerObject);
      }
      if (worldItemList_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WorldItemList);
      }
      if (worldMobileList_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WorldMobileList);
      }
      if (popupMenuList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PopupMenuList);
      }
      if (clilocDataList_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ClilocDataList);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerStatus);
      }
      if (playerSkillList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerSkillList);
      }
      if (staticObjectInfoList_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StaticObjectInfoList);
      }
      if (replayActions_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ReplayActions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerObject);
      }
      if (worldItemList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldItemList);
      }
      if (worldMobileList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldMobileList);
      }
      if (popupMenuList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PopupMenuList);
      }
      if (clilocDataList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClilocDataList);
      }
      if (playerStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStatus);
      }
      if (playerSkillList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerSkillList);
      }
      if (staticObjectInfoList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StaticObjectInfoList);
      }
      if (replayActions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReplayActions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(States other) {
      if (other == null) {
        return;
      }
      if (other.playerObject_ != null) {
        if (playerObject_ == null) {
          playerObject_ = new global::Uoservice.GrpcPlayerObject();
        }
        PlayerObject.MergeFrom(other.PlayerObject);
      }
      if (other.worldItemList_ != null) {
        if (worldItemList_ == null) {
          worldItemList_ = new global::Uoservice.GrpcItemObjectList();
        }
        WorldItemList.MergeFrom(other.WorldItemList);
      }
      if (other.worldMobileList_ != null) {
        if (worldMobileList_ == null) {
          worldMobileList_ = new global::Uoservice.GrpcMobileObjectList();
        }
        WorldMobileList.MergeFrom(other.WorldMobileList);
      }
      if (other.popupMenuList_ != null) {
        if (popupMenuList_ == null) {
          popupMenuList_ = new global::Uoservice.GrpcPopupMenuList();
        }
        PopupMenuList.MergeFrom(other.PopupMenuList);
      }
      if (other.clilocDataList_ != null) {
        if (clilocDataList_ == null) {
          clilocDataList_ = new global::Uoservice.GrpcClilocDataList();
        }
        ClilocDataList.MergeFrom(other.ClilocDataList);
      }
      if (other.playerStatus_ != null) {
        if (playerStatus_ == null) {
          playerStatus_ = new global::Uoservice.GrpcPlayerStatus();
        }
        PlayerStatus.MergeFrom(other.PlayerStatus);
      }
      if (other.playerSkillList_ != null) {
        if (playerSkillList_ == null) {
          playerSkillList_ = new global::Uoservice.GrpcSkillList();
        }
        PlayerSkillList.MergeFrom(other.PlayerSkillList);
      }
      if (other.staticObjectInfoList_ != null) {
        if (staticObjectInfoList_ == null) {
          staticObjectInfoList_ = new global::Uoservice.GrpcGameObjectInfoList();
        }
        StaticObjectInfoList.MergeFrom(other.StaticObjectInfoList);
      }
      if (other.replayActions_ != null) {
        if (replayActions_ == null) {
          replayActions_ = new global::Uoservice.Actions();
        }
        ReplayActions.MergeFrom(other.ReplayActions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerObject_ == null) {
              playerObject_ = new global::Uoservice.GrpcPlayerObject();
            }
            input.ReadMessage(playerObject_);
            break;
          }
          case 18: {
            if (worldItemList_ == null) {
              worldItemList_ = new global::Uoservice.GrpcItemObjectList();
            }
            input.ReadMessage(worldItemList_);
            break;
          }
          case 26: {
            if (worldMobileList_ == null) {
              worldMobileList_ = new global::Uoservice.GrpcMobileObjectList();
            }
            input.ReadMessage(worldMobileList_);
            break;
          }
          case 34: {
            if (popupMenuList_ == null) {
              popupMenuList_ = new global::Uoservice.GrpcPopupMenuList();
            }
            input.ReadMessage(popupMenuList_);
            break;
          }
          case 42: {
            if (clilocDataList_ == null) {
              clilocDataList_ = new global::Uoservice.GrpcClilocDataList();
            }
            input.ReadMessage(clilocDataList_);
            break;
          }
          case 50: {
            if (playerStatus_ == null) {
              playerStatus_ = new global::Uoservice.GrpcPlayerStatus();
            }
            input.ReadMessage(playerStatus_);
            break;
          }
          case 58: {
            if (playerSkillList_ == null) {
              playerSkillList_ = new global::Uoservice.GrpcSkillList();
            }
            input.ReadMessage(playerSkillList_);
            break;
          }
          case 66: {
            if (staticObjectInfoList_ == null) {
              staticObjectInfoList_ = new global::Uoservice.GrpcGameObjectInfoList();
            }
            input.ReadMessage(staticObjectInfoList_);
            break;
          }
          case 74: {
            if (replayActions_ == null) {
              replayActions_ = new global::Uoservice.Actions();
            }
            input.ReadMessage(replayActions_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Actions : pb::IMessage<Actions> {
    private static readonly pb::MessageParser<Actions> _parser = new pb::MessageParser<Actions>(() => new Actions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Actions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Actions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Actions(Actions other) : this() {
      actionType_ = other.actionType_;
      itemSerial_ = other.itemSerial_;
      mobileSerial_ = other.mobileSerial_;
      walkDirection_ = other.walkDirection_;
      index_ = other.index_;
      amount_ = other.amount_;
      run_ = other.run_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Actions Clone() {
      return new Actions(this);
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private uint actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "itemSerial" field.</summary>
    public const int ItemSerialFieldNumber = 2;
    private uint itemSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemSerial {
      get { return itemSerial_; }
      set {
        itemSerial_ = value;
      }
    }

    /// <summary>Field number for the "mobileSerial" field.</summary>
    public const int MobileSerialFieldNumber = 3;
    private uint mobileSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MobileSerial {
      get { return mobileSerial_; }
      set {
        mobileSerial_ = value;
      }
    }

    /// <summary>Field number for the "walkDirection" field.</summary>
    public const int WalkDirectionFieldNumber = 4;
    private uint walkDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WalkDirection {
      get { return walkDirection_; }
      set {
        walkDirection_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 5;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private uint amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "run" field.</summary>
    public const int RunFieldNumber = 7;
    private bool run_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Run {
      get { return run_; }
      set {
        run_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Actions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Actions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (ItemSerial != other.ItemSerial) return false;
      if (MobileSerial != other.MobileSerial) return false;
      if (WalkDirection != other.WalkDirection) return false;
      if (Index != other.Index) return false;
      if (Amount != other.Amount) return false;
      if (Run != other.Run) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (ItemSerial != 0) hash ^= ItemSerial.GetHashCode();
      if (MobileSerial != 0) hash ^= MobileSerial.GetHashCode();
      if (WalkDirection != 0) hash ^= WalkDirection.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (Run != false) hash ^= Run.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActionType);
      }
      if (ItemSerial != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemSerial);
      }
      if (MobileSerial != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MobileSerial);
      }
      if (WalkDirection != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(WalkDirection);
      }
      if (Index != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Index);
      }
      if (Amount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Amount);
      }
      if (Run != false) {
        output.WriteRawTag(56);
        output.WriteBool(Run);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionType);
      }
      if (ItemSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemSerial);
      }
      if (MobileSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MobileSerial);
      }
      if (WalkDirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WalkDirection);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (Run != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Actions other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.ItemSerial != 0) {
        ItemSerial = other.ItemSerial;
      }
      if (other.MobileSerial != 0) {
        MobileSerial = other.MobileSerial;
      }
      if (other.WalkDirection != 0) {
        WalkDirection = other.WalkDirection;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.Run != false) {
        Run = other.Run;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemSerial = input.ReadUInt32();
            break;
          }
          case 24: {
            MobileSerial = input.ReadUInt32();
            break;
          }
          case 32: {
            WalkDirection = input.ReadUInt32();
            break;
          }
          case 40: {
            Index = input.ReadUInt32();
            break;
          }
          case 48: {
            Amount = input.ReadUInt32();
            break;
          }
          case 56: {
            Run = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
