// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UoService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uoservice {

  /// <summary>Holder for reflection information generated from UoService.proto</summary>
  public static partial class UoServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for UoService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UoServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Vb1NlcnZpY2UucHJvdG8SCXVvc2VydmljZSIHCgVFbXB0eSL7AQoQR3Jw",
            "Y1BsYXllck9iamVjdBINCgVnYW1lWBgBIAEoDRINCgVnYW1lWRgCIAEoDRIO",
            "CgZzZXJpYWwYAyABKA0SDAoEbmFtZRgEIAEoCRINCgV0aXRsZRgFIAEoCRIW",
            "Cg5ob2xkSXRlbVNlcmlhbBgGIAEoDRIPCgd3YXJNb2RlGAcgASgIEhYKDnRh",
            "cmdldGluZ1N0YXRlGAggASgFEhAKCG1pblRpbGVYGAkgASgNEhAKCG1pblRp",
            "bGVZGAogASgNEhAKCG1heFRpbGVYGAsgASgNEhAKCG1heFRpbGVZGAwgASgN",
            "EhMKC2FjdGl2ZUd1bXBzGA0gAygNItEBChBHcnBjTW9iaWxlT2JqZWN0EgwK",
            "BGhpdHMYASABKA0SDwoHaGl0c01heBgCIAEoDRIMCgRyYWNlGAMgASgNEhAK",
            "CGRpc3RhbmNlGAQgASgNEg0KBWdhbWVYGAUgASgNEg0KBWdhbWVZGAYgASgN",
            "Eg4KBnNlcmlhbBgHIAEoDRIMCgRuYW1lGAggASgJEg0KBXRpdGxlGAkgASgJ",
            "EhUKDW5vdG9yaWV0eUZsYWcYCiABKA0SDAoEaXRlbRgLIAEoDRIOCgZpc0Rl",
            "YWQYDCABKAgivwEKDkdycGNJdGVtT2JqZWN0EhAKCGRpc3RhbmNlGAEgASgN",
            "Eg0KBWdhbWVYGAIgASgNEg0KBWdhbWVZGAMgASgNEg4KBnNlcmlhbBgEIAEo",
            "DRIMCgRuYW1lGAUgASgJEhAKCGlzQ29ycHNlGAYgASgIEg4KBmFtb3VudBgH",
            "IAEoDRINCgVwcmljZRgIIAEoDRINCgVsYXllchgJIAEoDRIRCgljb250YWlu",
            "ZXIYCiABKA0SDAoEZGF0YRgLIAEoCSLsAQoQR3JwY1BsYXllclN0YXR1cxIL",
            "CgNzdHIYASABKA0SCwoDZGV4GAIgASgNEg4KBmludGVsbBgDIAEoDRIMCgRo",
            "aXRzGAQgASgNEg8KB2hpdHNNYXgYBSABKA0SDwoHc3RhbWluYRgGIAEoDRIS",
            "CgpzdGFtaW5hTWF4GAcgASgNEgwKBG1hbmEYCCABKA0SDwoHbWFuYU1heBgJ",
            "IAEoDRIMCgRnb2xkGAogASgNEhoKEnBoeXNpY2FsUmVzaXN0YW5jZRgLIAEo",
            "DRIOCgZ3ZWlnaHQYDCABKA0SEQoJd2VpZ2h0TWF4GA0gASgNInUKCUdycGNT",
            "a2lsbBIMCgRuYW1lGAEgASgJEg0KBWluZGV4GAIgASgNEhMKC2lzQ2xpY2th",
            "YmxlGAMgASgIEg0KBXZhbHVlGAQgASgNEgwKBGJhc2UYBSABKA0SCwoDY2Fw",
            "GAYgASgNEgwKBGxvY2sYByABKA0iNQoIR3JwY0J1ZmYSDAoEdHlwZRgBIAEo",
            "DRINCgVkZWx0YRgCIAEoDRIMCgR0ZXh0GAMgASgJIi0KDUdycGNQb3B1cE1l",
            "bnUSDAoEdGV4dBgBIAEoCRIOCgZhY3RpdmUYAiABKAgiRwoKR3JwY0NsaWxv",
            "YxIOCgZzZXJpYWwYASABKA0SDAoEdGV4dBgCIAEoCRINCgVhZmZpeBgDIAEo",
            "CRIMCgRuYW1lGAQgASgJIpUBCgpHcnBjVmVuZG9yEhQKDHZlbmRvclNlcmlh",
            "bBgBIAEoDRISCgppdGVtU2VyaWFsGAIgASgNEhMKC2l0ZW1HcmFwaGljGAMg",
            "ASgNEg8KB2l0ZW1IdWUYBCABKA0SEgoKaXRlbUFtb3VudBgFIAEoDRIRCglp",
            "dGVtUHJpY2UYBiABKA0SEAoIaXRlbU5hbWUYByABKAkiXQoPR3JwY01lbnVD",
            "b250cm9sEgwKBG5hbWUYASABKAkSCQoBeBgCIAEoDRIJCgF5GAMgASgNEgwK",
            "BHBhZ2UYBCABKA0SDAoEdGV4dBgFIAEoCRIKCgJpZBgGIAEoDSKRAQoTR3Jw",
            "Y01lbnVDb250cm9sTGlzdBITCgtsb2NhbFNlcmlhbBgBIAEoDRIUCgxzZXJ2",
            "ZXJTZXJpYWwYAiABKA0SDgoGaGVpZ2h0GAMgASgNEg0KBXdpZHRoGAQgASgN",
            "EjAKDG1lbnVDb250cm9scxgFIAMoCzIaLnVvc2VydmljZS5HcnBjTWVudUNv",
            "bnRyb2wiNQoNR3JwY1NraWxsTGlzdBIkCgZza2lsbHMYASADKAsyFC51b3Nl",
            "cnZpY2UuR3JwY1NraWxsIjIKDEdycGNCdWZmTGlzdBIiCgVidWZmcxgBIAMo",
            "CzITLnVvc2VydmljZS5HcnBjQnVmZiJKChRHcnBjTW9iaWxlT2JqZWN0TGlz",
            "dBIyCg1tb2JpbGVPYmplY3RzGAEgAygLMhsudW9zZXJ2aWNlLkdycGNNb2Jp",
            "bGVPYmplY3QiRAoSR3JwY0l0ZW1PYmplY3RMaXN0Ei4KC2l0ZW1PYmplY3Rz",
            "GAEgAygLMhkudW9zZXJ2aWNlLkdycGNJdGVtT2JqZWN0IjwKEUdycGNQb3B1",
            "cE1lbnVMaXN0EicKBW1lbnVzGAEgAygLMhgudW9zZXJ2aWNlLkdycGNQb3B1",
            "cE1lbnUiOAoOR3JwY0NsaWxvY0xpc3QSJgoHY2xpbG9jcxgBIAMoCzIVLnVv",
            "c2VydmljZS5HcnBjQ2xpbG9jIjgKDkdycGNWZW5kb3JMaXN0EiYKB3ZlbmRv",
            "cnMYASADKAsyFS51b3NlcnZpY2UuR3JwY1ZlbmRvciIfCg9TZW1hcGhvcmVB",
            "Y3Rpb24SDAoEbW9kZRgBIAEoCSIWCgZDb25maWcSDAoEaW5pdBgBIAEoCCIr",
            "ChhHcnBjRGVsZXRlSXRlbVNlcmlhbExpc3QSDwoHc2VyaWFscxgBIAMoDSIt",
            "ChpHcnBjRGVsZXRlTW9iaWxlU2VyaWFsTGlzdBIPCgdzZXJpYWxzGAEgAygN",
            "IpwFCgpHcnBjU3RhdGVzEjEKDHBsYXllck9iamVjdBgBIAEoCzIbLnVvc2Vy",
            "dmljZS5HcnBjUGxheWVyT2JqZWN0EjQKDVdvcmxkSXRlbUxpc3QYAiABKAsy",
            "HS51b3NlcnZpY2UuR3JwY0l0ZW1PYmplY3RMaXN0EjgKD1dvcmxkTW9iaWxl",
            "TGlzdBgDIAEoCzIfLnVvc2VydmljZS5HcnBjTW9iaWxlT2JqZWN0TGlzdBIz",
            "Cg1wb3B1cE1lbnVMaXN0GAQgASgLMhwudW9zZXJ2aWNlLkdycGNQb3B1cE1l",
            "bnVMaXN0Ei0KCmNsaWxvY0xpc3QYBSABKAsyGS51b3NlcnZpY2UuR3JwY0Ns",
            "aWxvY0xpc3QSMQoMcGxheWVyU3RhdHVzGAYgASgLMhsudW9zZXJ2aWNlLkdy",
            "cGNQbGF5ZXJTdGF0dXMSMQoPcGxheWVyU2tpbGxMaXN0GAcgASgLMhgudW9z",
            "ZXJ2aWNlLkdycGNTa2lsbExpc3QSLwoOcGxheWVyQnVmZkxpc3QYCCABKAsy",
            "Fy51b3NlcnZpY2UuR3JwY0J1ZmZMaXN0Ei0KCnZlbmRvckxpc3QYCSABKAsy",
            "GS51b3NlcnZpY2UuR3JwY1ZlbmRvckxpc3QSQQoUZGVsZXRlSXRlbVNlcmlh",
            "bExpc3QYCiABKAsyIy51b3NlcnZpY2UuR3JwY0RlbGV0ZUl0ZW1TZXJpYWxM",
            "aXN0EkUKFmRlbGV0ZU1vYmlsZVNlcmlhbExpc3QYCyABKAsyJS51b3NlcnZp",
            "Y2UuR3JwY0RlbGV0ZU1vYmlsZVNlcmlhbExpc3QSNwoPbWVudUNvbnRyb2xM",
            "aXN0GAwgASgLMh4udW9zZXJ2aWNlLkdycGNNZW51Q29udHJvbExpc3QijwEK",
            "CkdycGNBY3Rpb24SEgoKYWN0aW9uVHlwZRgBIAEoDRIUCgxzb3VyY2VTZXJp",
            "YWwYAiABKA0SFAoMdGFyZ2V0U2VyaWFsGAMgASgNEhUKDXdhbGtEaXJlY3Rp",
            "b24YBCABKA0SDQoFaW5kZXgYBSABKA0SDgoGYW1vdW50GAYgASgNEgsKA3J1",
            "bhgHIAEoCDKeAwoJVW9TZXJ2aWNlEjEKBVJlc2V0EhEudW9zZXJ2aWNlLkNv",
            "bmZpZxoVLnVvc2VydmljZS5HcnBjU3RhdGVzEjMKB1JlYWRPYnMSES51b3Nl",
            "cnZpY2UuQ29uZmlnGhUudW9zZXJ2aWNlLkdycGNTdGF0ZXMSMwoIV3JpdGVB",
            "Y3QSFS51b3NlcnZpY2UuR3JwY0FjdGlvbhoQLnVvc2VydmljZS5FbXB0eRJD",
            "ChNBY3RTZW1hcGhvcmVDb250cm9sEhoudW9zZXJ2aWNlLlNlbWFwaG9yZUFj",
            "dGlvbhoQLnVvc2VydmljZS5FbXB0eRJDChNPYnNTZW1hcGhvcmVDb250cm9s",
            "EhoudW9zZXJ2aWNlLlNlbWFwaG9yZUFjdGlvbhoQLnVvc2VydmljZS5FbXB0",
            "eRI2CgpSZWFkUmVwbGF5EhEudW9zZXJ2aWNlLkNvbmZpZxoVLnVvc2Vydmlj",
            "ZS5HcnBjU3RhdGVzEjIKC1JlYWRNUFFGaWxlEhEudW9zZXJ2aWNlLkNvbmZp",
            "ZxoQLnVvc2VydmljZS5FbXB0eWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Empty), global::Uoservice.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPlayerObject), global::Uoservice.GrpcPlayerObject.Parser, new[]{ "GameX", "GameY", "Serial", "Name", "Title", "HoldItemSerial", "WarMode", "TargetingState", "MinTileX", "MinTileY", "MaxTileX", "MaxTileY", "ActiveGumps" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileObject), global::Uoservice.GrpcMobileObject.Parser, new[]{ "Hits", "HitsMax", "Race", "Distance", "GameX", "GameY", "Serial", "Name", "Title", "NotorietyFlag", "Item", "IsDead" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcItemObject), global::Uoservice.GrpcItemObject.Parser, new[]{ "Distance", "GameX", "GameY", "Serial", "Name", "IsCorpse", "Amount", "Price", "Layer", "Container", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPlayerStatus), global::Uoservice.GrpcPlayerStatus.Parser, new[]{ "Str", "Dex", "Intell", "Hits", "HitsMax", "Stamina", "StaminaMax", "Mana", "ManaMax", "Gold", "PhysicalResistance", "Weight", "WeightMax" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcSkill), global::Uoservice.GrpcSkill.Parser, new[]{ "Name", "Index", "IsClickable", "Value", "Base", "Cap", "Lock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcBuff), global::Uoservice.GrpcBuff.Parser, new[]{ "Type", "Delta", "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPopupMenu), global::Uoservice.GrpcPopupMenu.Parser, new[]{ "Text", "Active" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcCliloc), global::Uoservice.GrpcCliloc.Parser, new[]{ "Serial", "Text", "Affix", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcVendor), global::Uoservice.GrpcVendor.Parser, new[]{ "VendorSerial", "ItemSerial", "ItemGraphic", "ItemHue", "ItemAmount", "ItemPrice", "ItemName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMenuControl), global::Uoservice.GrpcMenuControl.Parser, new[]{ "Name", "X", "Y", "Page", "Text", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMenuControlList), global::Uoservice.GrpcMenuControlList.Parser, new[]{ "LocalSerial", "ServerSerial", "Height", "Width", "MenuControls" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcSkillList), global::Uoservice.GrpcSkillList.Parser, new[]{ "Skills" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcBuffList), global::Uoservice.GrpcBuffList.Parser, new[]{ "Buffs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileObjectList), global::Uoservice.GrpcMobileObjectList.Parser, new[]{ "MobileObjects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcItemObjectList), global::Uoservice.GrpcItemObjectList.Parser, new[]{ "ItemObjects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcPopupMenuList), global::Uoservice.GrpcPopupMenuList.Parser, new[]{ "Menus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcClilocList), global::Uoservice.GrpcClilocList.Parser, new[]{ "Clilocs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcVendorList), global::Uoservice.GrpcVendorList.Parser, new[]{ "Vendors" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.SemaphoreAction), global::Uoservice.SemaphoreAction.Parser, new[]{ "Mode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Config), global::Uoservice.Config.Parser, new[]{ "Init" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcDeleteItemSerialList), global::Uoservice.GrpcDeleteItemSerialList.Parser, new[]{ "Serials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcDeleteMobileSerialList), global::Uoservice.GrpcDeleteMobileSerialList.Parser, new[]{ "Serials" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcStates), global::Uoservice.GrpcStates.Parser, new[]{ "PlayerObject", "WorldItemList", "WorldMobileList", "PopupMenuList", "ClilocList", "PlayerStatus", "PlayerSkillList", "PlayerBuffList", "VendorList", "DeleteItemSerialList", "DeleteMobileSerialList", "MenuControlList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcAction), global::Uoservice.GrpcAction.Parser, new[]{ "ActionType", "SourceSerial", "TargetSerial", "WalkDirection", "Index", "Amount", "Run" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GrpcPlayerObject : pb::IMessage<GrpcPlayerObject> {
    private static readonly pb::MessageParser<GrpcPlayerObject> _parser = new pb::MessageParser<GrpcPlayerObject>(() => new GrpcPlayerObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPlayerObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerObject(GrpcPlayerObject other) : this() {
      gameX_ = other.gameX_;
      gameY_ = other.gameY_;
      serial_ = other.serial_;
      name_ = other.name_;
      title_ = other.title_;
      holdItemSerial_ = other.holdItemSerial_;
      warMode_ = other.warMode_;
      targetingState_ = other.targetingState_;
      minTileX_ = other.minTileX_;
      minTileY_ = other.minTileY_;
      maxTileX_ = other.maxTileX_;
      maxTileY_ = other.maxTileY_;
      activeGumps_ = other.activeGumps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerObject Clone() {
      return new GrpcPlayerObject(this);
    }

    /// <summary>Field number for the "gameX" field.</summary>
    public const int GameXFieldNumber = 1;
    private uint gameX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameX {
      get { return gameX_; }
      set {
        gameX_ = value;
      }
    }

    /// <summary>Field number for the "gameY" field.</summary>
    public const int GameYFieldNumber = 2;
    private uint gameY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameY {
      get { return gameY_; }
      set {
        gameY_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 3;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 5;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "holdItemSerial" field.</summary>
    public const int HoldItemSerialFieldNumber = 6;
    private uint holdItemSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HoldItemSerial {
      get { return holdItemSerial_; }
      set {
        holdItemSerial_ = value;
      }
    }

    /// <summary>Field number for the "warMode" field.</summary>
    public const int WarModeFieldNumber = 7;
    private bool warMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool WarMode {
      get { return warMode_; }
      set {
        warMode_ = value;
      }
    }

    /// <summary>Field number for the "targetingState" field.</summary>
    public const int TargetingStateFieldNumber = 8;
    private int targetingState_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetingState {
      get { return targetingState_; }
      set {
        targetingState_ = value;
      }
    }

    /// <summary>Field number for the "minTileX" field.</summary>
    public const int MinTileXFieldNumber = 9;
    private uint minTileX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinTileX {
      get { return minTileX_; }
      set {
        minTileX_ = value;
      }
    }

    /// <summary>Field number for the "minTileY" field.</summary>
    public const int MinTileYFieldNumber = 10;
    private uint minTileY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MinTileY {
      get { return minTileY_; }
      set {
        minTileY_ = value;
      }
    }

    /// <summary>Field number for the "maxTileX" field.</summary>
    public const int MaxTileXFieldNumber = 11;
    private uint maxTileX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxTileX {
      get { return maxTileX_; }
      set {
        maxTileX_ = value;
      }
    }

    /// <summary>Field number for the "maxTileY" field.</summary>
    public const int MaxTileYFieldNumber = 12;
    private uint maxTileY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxTileY {
      get { return maxTileY_; }
      set {
        maxTileY_ = value;
      }
    }

    /// <summary>Field number for the "activeGumps" field.</summary>
    public const int ActiveGumpsFieldNumber = 13;
    private static readonly pb::FieldCodec<uint> _repeated_activeGumps_codec
        = pb::FieldCodec.ForUInt32(106);
    private readonly pbc::RepeatedField<uint> activeGumps_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> ActiveGumps {
      get { return activeGumps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPlayerObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPlayerObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameX != other.GameX) return false;
      if (GameY != other.GameY) return false;
      if (Serial != other.Serial) return false;
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (HoldItemSerial != other.HoldItemSerial) return false;
      if (WarMode != other.WarMode) return false;
      if (TargetingState != other.TargetingState) return false;
      if (MinTileX != other.MinTileX) return false;
      if (MinTileY != other.MinTileY) return false;
      if (MaxTileX != other.MaxTileX) return false;
      if (MaxTileY != other.MaxTileY) return false;
      if(!activeGumps_.Equals(other.activeGumps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameX != 0) hash ^= GameX.GetHashCode();
      if (GameY != 0) hash ^= GameY.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (HoldItemSerial != 0) hash ^= HoldItemSerial.GetHashCode();
      if (WarMode != false) hash ^= WarMode.GetHashCode();
      if (TargetingState != 0) hash ^= TargetingState.GetHashCode();
      if (MinTileX != 0) hash ^= MinTileX.GetHashCode();
      if (MinTileY != 0) hash ^= MinTileY.GetHashCode();
      if (MaxTileX != 0) hash ^= MaxTileX.GetHashCode();
      if (MaxTileY != 0) hash ^= MaxTileY.GetHashCode();
      hash ^= activeGumps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (GameX != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(GameX);
      }
      if (GameY != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameY);
      }
      if (Serial != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Serial);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Title);
      }
      if (HoldItemSerial != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(HoldItemSerial);
      }
      if (WarMode != false) {
        output.WriteRawTag(56);
        output.WriteBool(WarMode);
      }
      if (TargetingState != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TargetingState);
      }
      if (MinTileX != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(MinTileX);
      }
      if (MinTileY != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(MinTileY);
      }
      if (MaxTileX != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(MaxTileX);
      }
      if (MaxTileY != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(MaxTileY);
      }
      activeGumps_.WriteTo(output, _repeated_activeGumps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameX);
      }
      if (GameY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameY);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (HoldItemSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HoldItemSerial);
      }
      if (WarMode != false) {
        size += 1 + 1;
      }
      if (TargetingState != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetingState);
      }
      if (MinTileX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinTileX);
      }
      if (MinTileY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MinTileY);
      }
      if (MaxTileX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxTileX);
      }
      if (MaxTileY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxTileY);
      }
      size += activeGumps_.CalculateSize(_repeated_activeGumps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPlayerObject other) {
      if (other == null) {
        return;
      }
      if (other.GameX != 0) {
        GameX = other.GameX;
      }
      if (other.GameY != 0) {
        GameY = other.GameY;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.HoldItemSerial != 0) {
        HoldItemSerial = other.HoldItemSerial;
      }
      if (other.WarMode != false) {
        WarMode = other.WarMode;
      }
      if (other.TargetingState != 0) {
        TargetingState = other.TargetingState;
      }
      if (other.MinTileX != 0) {
        MinTileX = other.MinTileX;
      }
      if (other.MinTileY != 0) {
        MinTileY = other.MinTileY;
      }
      if (other.MaxTileX != 0) {
        MaxTileX = other.MaxTileX;
      }
      if (other.MaxTileY != 0) {
        MaxTileY = other.MaxTileY;
      }
      activeGumps_.Add(other.activeGumps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GameX = input.ReadUInt32();
            break;
          }
          case 16: {
            GameY = input.ReadUInt32();
            break;
          }
          case 24: {
            Serial = input.ReadUInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Title = input.ReadString();
            break;
          }
          case 48: {
            HoldItemSerial = input.ReadUInt32();
            break;
          }
          case 56: {
            WarMode = input.ReadBool();
            break;
          }
          case 64: {
            TargetingState = input.ReadInt32();
            break;
          }
          case 72: {
            MinTileX = input.ReadUInt32();
            break;
          }
          case 80: {
            MinTileY = input.ReadUInt32();
            break;
          }
          case 88: {
            MaxTileX = input.ReadUInt32();
            break;
          }
          case 96: {
            MaxTileY = input.ReadUInt32();
            break;
          }
          case 106:
          case 104: {
            activeGumps_.AddEntriesFrom(input, _repeated_activeGumps_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMobileObject : pb::IMessage<GrpcMobileObject> {
    private static readonly pb::MessageParser<GrpcMobileObject> _parser = new pb::MessageParser<GrpcMobileObject>(() => new GrpcMobileObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObject(GrpcMobileObject other) : this() {
      hits_ = other.hits_;
      hitsMax_ = other.hitsMax_;
      race_ = other.race_;
      distance_ = other.distance_;
      gameX_ = other.gameX_;
      gameY_ = other.gameY_;
      serial_ = other.serial_;
      name_ = other.name_;
      title_ = other.title_;
      notorietyFlag_ = other.notorietyFlag_;
      item_ = other.item_;
      isDead_ = other.isDead_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObject Clone() {
      return new GrpcMobileObject(this);
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 1;
    private uint hits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hits {
      get { return hits_; }
      set {
        hits_ = value;
      }
    }

    /// <summary>Field number for the "hitsMax" field.</summary>
    public const int HitsMaxFieldNumber = 2;
    private uint hitsMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HitsMax {
      get { return hitsMax_; }
      set {
        hitsMax_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 3;
    private uint race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private uint distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "gameX" field.</summary>
    public const int GameXFieldNumber = 5;
    private uint gameX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameX {
      get { return gameX_; }
      set {
        gameX_ = value;
      }
    }

    /// <summary>Field number for the "gameY" field.</summary>
    public const int GameYFieldNumber = 6;
    private uint gameY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameY {
      get { return gameY_; }
      set {
        gameY_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 7;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 8;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 9;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "notorietyFlag" field.</summary>
    public const int NotorietyFlagFieldNumber = 10;
    private uint notorietyFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NotorietyFlag {
      get { return notorietyFlag_; }
      set {
        notorietyFlag_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 11;
    private uint item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "isDead" field.</summary>
    public const int IsDeadFieldNumber = 12;
    private bool isDead_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDead {
      get { return isDead_; }
      set {
        isDead_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hits != other.Hits) return false;
      if (HitsMax != other.HitsMax) return false;
      if (Race != other.Race) return false;
      if (Distance != other.Distance) return false;
      if (GameX != other.GameX) return false;
      if (GameY != other.GameY) return false;
      if (Serial != other.Serial) return false;
      if (Name != other.Name) return false;
      if (Title != other.Title) return false;
      if (NotorietyFlag != other.NotorietyFlag) return false;
      if (Item != other.Item) return false;
      if (IsDead != other.IsDead) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hits != 0) hash ^= Hits.GetHashCode();
      if (HitsMax != 0) hash ^= HitsMax.GetHashCode();
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (GameX != 0) hash ^= GameX.GetHashCode();
      if (GameY != 0) hash ^= GameY.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (NotorietyFlag != 0) hash ^= NotorietyFlag.GetHashCode();
      if (Item != 0) hash ^= Item.GetHashCode();
      if (IsDead != false) hash ^= IsDead.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hits != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Hits);
      }
      if (HitsMax != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(HitsMax);
      }
      if (Race != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Race);
      }
      if (Distance != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Distance);
      }
      if (GameX != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(GameX);
      }
      if (GameY != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(GameY);
      }
      if (Serial != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Serial);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Name);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Title);
      }
      if (NotorietyFlag != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(NotorietyFlag);
      }
      if (Item != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(Item);
      }
      if (IsDead != false) {
        output.WriteRawTag(96);
        output.WriteBool(IsDead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hits);
      }
      if (HitsMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitsMax);
      }
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distance);
      }
      if (GameX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameX);
      }
      if (GameY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameY);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (NotorietyFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NotorietyFlag);
      }
      if (Item != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Item);
      }
      if (IsDead != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileObject other) {
      if (other == null) {
        return;
      }
      if (other.Hits != 0) {
        Hits = other.Hits;
      }
      if (other.HitsMax != 0) {
        HitsMax = other.HitsMax;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.GameX != 0) {
        GameX = other.GameX;
      }
      if (other.GameY != 0) {
        GameY = other.GameY;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.NotorietyFlag != 0) {
        NotorietyFlag = other.NotorietyFlag;
      }
      if (other.Item != 0) {
        Item = other.Item;
      }
      if (other.IsDead != false) {
        IsDead = other.IsDead;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hits = input.ReadUInt32();
            break;
          }
          case 16: {
            HitsMax = input.ReadUInt32();
            break;
          }
          case 24: {
            Race = input.ReadUInt32();
            break;
          }
          case 32: {
            Distance = input.ReadUInt32();
            break;
          }
          case 40: {
            GameX = input.ReadUInt32();
            break;
          }
          case 48: {
            GameY = input.ReadUInt32();
            break;
          }
          case 56: {
            Serial = input.ReadUInt32();
            break;
          }
          case 66: {
            Name = input.ReadString();
            break;
          }
          case 74: {
            Title = input.ReadString();
            break;
          }
          case 80: {
            NotorietyFlag = input.ReadUInt32();
            break;
          }
          case 88: {
            Item = input.ReadUInt32();
            break;
          }
          case 96: {
            IsDead = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcItemObject : pb::IMessage<GrpcItemObject> {
    private static readonly pb::MessageParser<GrpcItemObject> _parser = new pb::MessageParser<GrpcItemObject>(() => new GrpcItemObject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcItemObject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObject(GrpcItemObject other) : this() {
      distance_ = other.distance_;
      gameX_ = other.gameX_;
      gameY_ = other.gameY_;
      serial_ = other.serial_;
      name_ = other.name_;
      isCorpse_ = other.isCorpse_;
      amount_ = other.amount_;
      price_ = other.price_;
      layer_ = other.layer_;
      container_ = other.container_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObject Clone() {
      return new GrpcItemObject(this);
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 1;
    private uint distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    /// <summary>Field number for the "gameX" field.</summary>
    public const int GameXFieldNumber = 2;
    private uint gameX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameX {
      get { return gameX_; }
      set {
        gameX_ = value;
      }
    }

    /// <summary>Field number for the "gameY" field.</summary>
    public const int GameYFieldNumber = 3;
    private uint gameY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GameY {
      get { return gameY_; }
      set {
        gameY_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 4;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isCorpse" field.</summary>
    public const int IsCorpseFieldNumber = 6;
    private bool isCorpse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCorpse {
      get { return isCorpse_; }
      set {
        isCorpse_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 7;
    private uint amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 8;
    private uint price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 9;
    private uint layer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 10;
    private uint container_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Container {
      get { return container_; }
      set {
        container_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 11;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcItemObject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcItemObject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Distance != other.Distance) return false;
      if (GameX != other.GameX) return false;
      if (GameY != other.GameY) return false;
      if (Serial != other.Serial) return false;
      if (Name != other.Name) return false;
      if (IsCorpse != other.IsCorpse) return false;
      if (Amount != other.Amount) return false;
      if (Price != other.Price) return false;
      if (Layer != other.Layer) return false;
      if (Container != other.Container) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (GameX != 0) hash ^= GameX.GetHashCode();
      if (GameY != 0) hash ^= GameY.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IsCorpse != false) hash ^= IsCorpse.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (Price != 0) hash ^= Price.GetHashCode();
      if (Layer != 0) hash ^= Layer.GetHashCode();
      if (Container != 0) hash ^= Container.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Distance != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Distance);
      }
      if (GameX != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(GameX);
      }
      if (GameY != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(GameY);
      }
      if (Serial != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Serial);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (IsCorpse != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsCorpse);
      }
      if (Amount != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Amount);
      }
      if (Price != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Price);
      }
      if (Layer != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(Layer);
      }
      if (Container != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Container);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distance);
      }
      if (GameX != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameX);
      }
      if (GameY != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GameY);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IsCorpse != false) {
        size += 1 + 1;
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (Price != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Price);
      }
      if (Layer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Layer);
      }
      if (Container != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Container);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcItemObject other) {
      if (other == null) {
        return;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      if (other.GameX != 0) {
        GameX = other.GameX;
      }
      if (other.GameY != 0) {
        GameY = other.GameY;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IsCorpse != false) {
        IsCorpse = other.IsCorpse;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.Price != 0) {
        Price = other.Price;
      }
      if (other.Layer != 0) {
        Layer = other.Layer;
      }
      if (other.Container != 0) {
        Container = other.Container;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Distance = input.ReadUInt32();
            break;
          }
          case 16: {
            GameX = input.ReadUInt32();
            break;
          }
          case 24: {
            GameY = input.ReadUInt32();
            break;
          }
          case 32: {
            Serial = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 48: {
            IsCorpse = input.ReadBool();
            break;
          }
          case 56: {
            Amount = input.ReadUInt32();
            break;
          }
          case 64: {
            Price = input.ReadUInt32();
            break;
          }
          case 72: {
            Layer = input.ReadUInt32();
            break;
          }
          case 80: {
            Container = input.ReadUInt32();
            break;
          }
          case 90: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPlayerStatus : pb::IMessage<GrpcPlayerStatus> {
    private static readonly pb::MessageParser<GrpcPlayerStatus> _parser = new pb::MessageParser<GrpcPlayerStatus>(() => new GrpcPlayerStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPlayerStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerStatus(GrpcPlayerStatus other) : this() {
      str_ = other.str_;
      dex_ = other.dex_;
      intell_ = other.intell_;
      hits_ = other.hits_;
      hitsMax_ = other.hitsMax_;
      stamina_ = other.stamina_;
      staminaMax_ = other.staminaMax_;
      mana_ = other.mana_;
      manaMax_ = other.manaMax_;
      gold_ = other.gold_;
      physicalResistance_ = other.physicalResistance_;
      weight_ = other.weight_;
      weightMax_ = other.weightMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPlayerStatus Clone() {
      return new GrpcPlayerStatus(this);
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 1;
    private uint str_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "dex" field.</summary>
    public const int DexFieldNumber = 2;
    private uint dex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dex {
      get { return dex_; }
      set {
        dex_ = value;
      }
    }

    /// <summary>Field number for the "intell" field.</summary>
    public const int IntellFieldNumber = 3;
    private uint intell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Intell {
      get { return intell_; }
      set {
        intell_ = value;
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 4;
    private uint hits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hits {
      get { return hits_; }
      set {
        hits_ = value;
      }
    }

    /// <summary>Field number for the "hitsMax" field.</summary>
    public const int HitsMaxFieldNumber = 5;
    private uint hitsMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HitsMax {
      get { return hitsMax_; }
      set {
        hitsMax_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 6;
    private uint stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    /// <summary>Field number for the "staminaMax" field.</summary>
    public const int StaminaMaxFieldNumber = 7;
    private uint staminaMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StaminaMax {
      get { return staminaMax_; }
      set {
        staminaMax_ = value;
      }
    }

    /// <summary>Field number for the "mana" field.</summary>
    public const int ManaFieldNumber = 8;
    private uint mana_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Mana {
      get { return mana_; }
      set {
        mana_ = value;
      }
    }

    /// <summary>Field number for the "manaMax" field.</summary>
    public const int ManaMaxFieldNumber = 9;
    private uint manaMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ManaMax {
      get { return manaMax_; }
      set {
        manaMax_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 10;
    private uint gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "physicalResistance" field.</summary>
    public const int PhysicalResistanceFieldNumber = 11;
    private uint physicalResistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PhysicalResistance {
      get { return physicalResistance_; }
      set {
        physicalResistance_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 12;
    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "weightMax" field.</summary>
    public const int WeightMaxFieldNumber = 13;
    private uint weightMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WeightMax {
      get { return weightMax_; }
      set {
        weightMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPlayerStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPlayerStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Str != other.Str) return false;
      if (Dex != other.Dex) return false;
      if (Intell != other.Intell) return false;
      if (Hits != other.Hits) return false;
      if (HitsMax != other.HitsMax) return false;
      if (Stamina != other.Stamina) return false;
      if (StaminaMax != other.StaminaMax) return false;
      if (Mana != other.Mana) return false;
      if (ManaMax != other.ManaMax) return false;
      if (Gold != other.Gold) return false;
      if (PhysicalResistance != other.PhysicalResistance) return false;
      if (Weight != other.Weight) return false;
      if (WeightMax != other.WeightMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Str != 0) hash ^= Str.GetHashCode();
      if (Dex != 0) hash ^= Dex.GetHashCode();
      if (Intell != 0) hash ^= Intell.GetHashCode();
      if (Hits != 0) hash ^= Hits.GetHashCode();
      if (HitsMax != 0) hash ^= HitsMax.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      if (StaminaMax != 0) hash ^= StaminaMax.GetHashCode();
      if (Mana != 0) hash ^= Mana.GetHashCode();
      if (ManaMax != 0) hash ^= ManaMax.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (PhysicalResistance != 0) hash ^= PhysicalResistance.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (WeightMax != 0) hash ^= WeightMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Str != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Str);
      }
      if (Dex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Dex);
      }
      if (Intell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Intell);
      }
      if (Hits != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Hits);
      }
      if (HitsMax != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(HitsMax);
      }
      if (Stamina != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Stamina);
      }
      if (StaminaMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(StaminaMax);
      }
      if (Mana != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Mana);
      }
      if (ManaMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ManaMax);
      }
      if (Gold != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Gold);
      }
      if (PhysicalResistance != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PhysicalResistance);
      }
      if (Weight != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Weight);
      }
      if (WeightMax != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WeightMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Str != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Str);
      }
      if (Dex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dex);
      }
      if (Intell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Intell);
      }
      if (Hits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hits);
      }
      if (HitsMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitsMax);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stamina);
      }
      if (StaminaMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StaminaMax);
      }
      if (Mana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mana);
      }
      if (ManaMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ManaMax);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gold);
      }
      if (PhysicalResistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PhysicalResistance);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (WeightMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeightMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPlayerStatus other) {
      if (other == null) {
        return;
      }
      if (other.Str != 0) {
        Str = other.Str;
      }
      if (other.Dex != 0) {
        Dex = other.Dex;
      }
      if (other.Intell != 0) {
        Intell = other.Intell;
      }
      if (other.Hits != 0) {
        Hits = other.Hits;
      }
      if (other.HitsMax != 0) {
        HitsMax = other.HitsMax;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
      if (other.StaminaMax != 0) {
        StaminaMax = other.StaminaMax;
      }
      if (other.Mana != 0) {
        Mana = other.Mana;
      }
      if (other.ManaMax != 0) {
        ManaMax = other.ManaMax;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.PhysicalResistance != 0) {
        PhysicalResistance = other.PhysicalResistance;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      if (other.WeightMax != 0) {
        WeightMax = other.WeightMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Str = input.ReadUInt32();
            break;
          }
          case 16: {
            Dex = input.ReadUInt32();
            break;
          }
          case 24: {
            Intell = input.ReadUInt32();
            break;
          }
          case 32: {
            Hits = input.ReadUInt32();
            break;
          }
          case 40: {
            HitsMax = input.ReadUInt32();
            break;
          }
          case 48: {
            Stamina = input.ReadUInt32();
            break;
          }
          case 56: {
            StaminaMax = input.ReadUInt32();
            break;
          }
          case 64: {
            Mana = input.ReadUInt32();
            break;
          }
          case 72: {
            ManaMax = input.ReadUInt32();
            break;
          }
          case 80: {
            Gold = input.ReadUInt32();
            break;
          }
          case 88: {
            PhysicalResistance = input.ReadUInt32();
            break;
          }
          case 96: {
            Weight = input.ReadUInt32();
            break;
          }
          case 104: {
            WeightMax = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcSkill : pb::IMessage<GrpcSkill> {
    private static readonly pb::MessageParser<GrpcSkill> _parser = new pb::MessageParser<GrpcSkill>(() => new GrpcSkill());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcSkill> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkill() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkill(GrpcSkill other) : this() {
      name_ = other.name_;
      index_ = other.index_;
      isClickable_ = other.isClickable_;
      value_ = other.value_;
      base_ = other.base_;
      cap_ = other.cap_;
      lock_ = other.lock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkill Clone() {
      return new GrpcSkill(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "isClickable" field.</summary>
    public const int IsClickableFieldNumber = 3;
    private bool isClickable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClickable {
      get { return isClickable_; }
      set {
        isClickable_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 4;
    private uint value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "base" field.</summary>
    public const int BaseFieldNumber = 5;
    private uint base_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Base {
      get { return base_; }
      set {
        base_ = value;
      }
    }

    /// <summary>Field number for the "cap" field.</summary>
    public const int CapFieldNumber = 6;
    private uint cap_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Cap {
      get { return cap_; }
      set {
        cap_ = value;
      }
    }

    /// <summary>Field number for the "lock" field.</summary>
    public const int LockFieldNumber = 7;
    private uint lock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Lock {
      get { return lock_; }
      set {
        lock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcSkill);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcSkill other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Index != other.Index) return false;
      if (IsClickable != other.IsClickable) return false;
      if (Value != other.Value) return false;
      if (Base != other.Base) return false;
      if (Cap != other.Cap) return false;
      if (Lock != other.Lock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (IsClickable != false) hash ^= IsClickable.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (Base != 0) hash ^= Base.GetHashCode();
      if (Cap != 0) hash ^= Cap.GetHashCode();
      if (Lock != 0) hash ^= Lock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (IsClickable != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsClickable);
      }
      if (Value != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Value);
      }
      if (Base != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Base);
      }
      if (Cap != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Cap);
      }
      if (Lock != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Lock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (IsClickable != false) {
        size += 1 + 1;
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Value);
      }
      if (Base != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Base);
      }
      if (Cap != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Cap);
      }
      if (Lock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Lock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcSkill other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.IsClickable != false) {
        IsClickable = other.IsClickable;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.Base != 0) {
        Base = other.Base;
      }
      if (other.Cap != 0) {
        Cap = other.Cap;
      }
      if (other.Lock != 0) {
        Lock = other.Lock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
          case 24: {
            IsClickable = input.ReadBool();
            break;
          }
          case 32: {
            Value = input.ReadUInt32();
            break;
          }
          case 40: {
            Base = input.ReadUInt32();
            break;
          }
          case 48: {
            Cap = input.ReadUInt32();
            break;
          }
          case 56: {
            Lock = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcBuff : pb::IMessage<GrpcBuff> {
    private static readonly pb::MessageParser<GrpcBuff> _parser = new pb::MessageParser<GrpcBuff>(() => new GrpcBuff());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcBuff> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBuff() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBuff(GrpcBuff other) : this() {
      type_ = other.type_;
      delta_ = other.delta_;
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBuff Clone() {
      return new GrpcBuff(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private uint type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "delta" field.</summary>
    public const int DeltaFieldNumber = 2;
    private uint delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 3;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcBuff);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcBuff other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Delta != other.Delta) return false;
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Delta != 0) hash ^= Delta.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Type);
      }
      if (Delta != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Delta);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (Delta != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Delta);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcBuff other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Delta != 0) {
        Delta = other.Delta;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadUInt32();
            break;
          }
          case 16: {
            Delta = input.ReadUInt32();
            break;
          }
          case 26: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopupMenu : pb::IMessage<GrpcPopupMenu> {
    private static readonly pb::MessageParser<GrpcPopupMenu> _parser = new pb::MessageParser<GrpcPopupMenu>(() => new GrpcPopupMenu());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopupMenu> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenu() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenu(GrpcPopupMenu other) : this() {
      text_ = other.text_;
      active_ = other.active_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenu Clone() {
      return new GrpcPopupMenu(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 2;
    private bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopupMenu);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopupMenu other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Active != other.Active) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Active != false) hash ^= Active.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Active != false) {
        output.WriteRawTag(16);
        output.WriteBool(Active);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Active != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopupMenu other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Active != false) {
        Active = other.Active;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 16: {
            Active = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcCliloc : pb::IMessage<GrpcCliloc> {
    private static readonly pb::MessageParser<GrpcCliloc> _parser = new pb::MessageParser<GrpcCliloc>(() => new GrpcCliloc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcCliloc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCliloc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCliloc(GrpcCliloc other) : this() {
      serial_ = other.serial_;
      text_ = other.text_;
      affix_ = other.affix_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcCliloc Clone() {
      return new GrpcCliloc(this);
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 1;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "affix" field.</summary>
    public const int AffixFieldNumber = 3;
    private string affix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Affix {
      get { return affix_; }
      set {
        affix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcCliloc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcCliloc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Serial != other.Serial) return false;
      if (Text != other.Text) return false;
      if (Affix != other.Affix) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Affix.Length != 0) hash ^= Affix.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Serial != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Serial);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (Affix.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Affix);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Affix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Affix);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcCliloc other) {
      if (other == null) {
        return;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Affix.Length != 0) {
        Affix = other.Affix;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Serial = input.ReadUInt32();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            Affix = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVendor : pb::IMessage<GrpcVendor> {
    private static readonly pb::MessageParser<GrpcVendor> _parser = new pb::MessageParser<GrpcVendor>(() => new GrpcVendor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVendor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVendor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVendor(GrpcVendor other) : this() {
      vendorSerial_ = other.vendorSerial_;
      itemSerial_ = other.itemSerial_;
      itemGraphic_ = other.itemGraphic_;
      itemHue_ = other.itemHue_;
      itemAmount_ = other.itemAmount_;
      itemPrice_ = other.itemPrice_;
      itemName_ = other.itemName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVendor Clone() {
      return new GrpcVendor(this);
    }

    /// <summary>Field number for the "vendorSerial" field.</summary>
    public const int VendorSerialFieldNumber = 1;
    private uint vendorSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint VendorSerial {
      get { return vendorSerial_; }
      set {
        vendorSerial_ = value;
      }
    }

    /// <summary>Field number for the "itemSerial" field.</summary>
    public const int ItemSerialFieldNumber = 2;
    private uint itemSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemSerial {
      get { return itemSerial_; }
      set {
        itemSerial_ = value;
      }
    }

    /// <summary>Field number for the "itemGraphic" field.</summary>
    public const int ItemGraphicFieldNumber = 3;
    private uint itemGraphic_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemGraphic {
      get { return itemGraphic_; }
      set {
        itemGraphic_ = value;
      }
    }

    /// <summary>Field number for the "itemHue" field.</summary>
    public const int ItemHueFieldNumber = 4;
    private uint itemHue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemHue {
      get { return itemHue_; }
      set {
        itemHue_ = value;
      }
    }

    /// <summary>Field number for the "itemAmount" field.</summary>
    public const int ItemAmountFieldNumber = 5;
    private uint itemAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemAmount {
      get { return itemAmount_; }
      set {
        itemAmount_ = value;
      }
    }

    /// <summary>Field number for the "itemPrice" field.</summary>
    public const int ItemPriceFieldNumber = 6;
    private uint itemPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemPrice {
      get { return itemPrice_; }
      set {
        itemPrice_ = value;
      }
    }

    /// <summary>Field number for the "itemName" field.</summary>
    public const int ItemNameFieldNumber = 7;
    private string itemName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemName {
      get { return itemName_; }
      set {
        itemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVendor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVendor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VendorSerial != other.VendorSerial) return false;
      if (ItemSerial != other.ItemSerial) return false;
      if (ItemGraphic != other.ItemGraphic) return false;
      if (ItemHue != other.ItemHue) return false;
      if (ItemAmount != other.ItemAmount) return false;
      if (ItemPrice != other.ItemPrice) return false;
      if (ItemName != other.ItemName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VendorSerial != 0) hash ^= VendorSerial.GetHashCode();
      if (ItemSerial != 0) hash ^= ItemSerial.GetHashCode();
      if (ItemGraphic != 0) hash ^= ItemGraphic.GetHashCode();
      if (ItemHue != 0) hash ^= ItemHue.GetHashCode();
      if (ItemAmount != 0) hash ^= ItemAmount.GetHashCode();
      if (ItemPrice != 0) hash ^= ItemPrice.GetHashCode();
      if (ItemName.Length != 0) hash ^= ItemName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VendorSerial != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VendorSerial);
      }
      if (ItemSerial != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ItemSerial);
      }
      if (ItemGraphic != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemGraphic);
      }
      if (ItemHue != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(ItemHue);
      }
      if (ItemAmount != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(ItemAmount);
      }
      if (ItemPrice != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(ItemPrice);
      }
      if (ItemName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ItemName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VendorSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VendorSerial);
      }
      if (ItemSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemSerial);
      }
      if (ItemGraphic != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemGraphic);
      }
      if (ItemHue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemHue);
      }
      if (ItemAmount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemAmount);
      }
      if (ItemPrice != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemPrice);
      }
      if (ItemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVendor other) {
      if (other == null) {
        return;
      }
      if (other.VendorSerial != 0) {
        VendorSerial = other.VendorSerial;
      }
      if (other.ItemSerial != 0) {
        ItemSerial = other.ItemSerial;
      }
      if (other.ItemGraphic != 0) {
        ItemGraphic = other.ItemGraphic;
      }
      if (other.ItemHue != 0) {
        ItemHue = other.ItemHue;
      }
      if (other.ItemAmount != 0) {
        ItemAmount = other.ItemAmount;
      }
      if (other.ItemPrice != 0) {
        ItemPrice = other.ItemPrice;
      }
      if (other.ItemName.Length != 0) {
        ItemName = other.ItemName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VendorSerial = input.ReadUInt32();
            break;
          }
          case 16: {
            ItemSerial = input.ReadUInt32();
            break;
          }
          case 24: {
            ItemGraphic = input.ReadUInt32();
            break;
          }
          case 32: {
            ItemHue = input.ReadUInt32();
            break;
          }
          case 40: {
            ItemAmount = input.ReadUInt32();
            break;
          }
          case 48: {
            ItemPrice = input.ReadUInt32();
            break;
          }
          case 58: {
            ItemName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMenuControl : pb::IMessage<GrpcMenuControl> {
    private static readonly pb::MessageParser<GrpcMenuControl> _parser = new pb::MessageParser<GrpcMenuControl>(() => new GrpcMenuControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMenuControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMenuControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMenuControl(GrpcMenuControl other) : this() {
      name_ = other.name_;
      x_ = other.x_;
      y_ = other.y_;
      page_ = other.page_;
      text_ = other.text_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMenuControl Clone() {
      return new GrpcMenuControl(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 4;
    private uint page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 5;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 6;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMenuControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMenuControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Page != other.Page) return false;
      if (Text != other.Text) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (Page != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Page);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Text);
      }
      if (Id != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMenuControl other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
          case 32: {
            Page = input.ReadUInt32();
            break;
          }
          case 42: {
            Text = input.ReadString();
            break;
          }
          case 48: {
            Id = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMenuControlList : pb::IMessage<GrpcMenuControlList> {
    private static readonly pb::MessageParser<GrpcMenuControlList> _parser = new pb::MessageParser<GrpcMenuControlList>(() => new GrpcMenuControlList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMenuControlList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMenuControlList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMenuControlList(GrpcMenuControlList other) : this() {
      localSerial_ = other.localSerial_;
      serverSerial_ = other.serverSerial_;
      height_ = other.height_;
      width_ = other.width_;
      menuControls_ = other.menuControls_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMenuControlList Clone() {
      return new GrpcMenuControlList(this);
    }

    /// <summary>Field number for the "localSerial" field.</summary>
    public const int LocalSerialFieldNumber = 1;
    private uint localSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LocalSerial {
      get { return localSerial_; }
      set {
        localSerial_ = value;
      }
    }

    /// <summary>Field number for the "serverSerial" field.</summary>
    public const int ServerSerialFieldNumber = 2;
    private uint serverSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ServerSerial {
      get { return serverSerial_; }
      set {
        serverSerial_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 3;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 4;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "menuControls" field.</summary>
    public const int MenuControlsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcMenuControl> _repeated_menuControls_codec
        = pb::FieldCodec.ForMessage(42, global::Uoservice.GrpcMenuControl.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcMenuControl> menuControls_ = new pbc::RepeatedField<global::Uoservice.GrpcMenuControl>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcMenuControl> MenuControls {
      get { return menuControls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMenuControlList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMenuControlList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalSerial != other.LocalSerial) return false;
      if (ServerSerial != other.ServerSerial) return false;
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if(!menuControls_.Equals(other.menuControls_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocalSerial != 0) hash ^= LocalSerial.GetHashCode();
      if (ServerSerial != 0) hash ^= ServerSerial.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      hash ^= menuControls_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LocalSerial != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(LocalSerial);
      }
      if (ServerSerial != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ServerSerial);
      }
      if (Height != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Height);
      }
      if (Width != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Width);
      }
      menuControls_.WriteTo(output, _repeated_menuControls_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocalSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LocalSerial);
      }
      if (ServerSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ServerSerial);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      size += menuControls_.CalculateSize(_repeated_menuControls_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMenuControlList other) {
      if (other == null) {
        return;
      }
      if (other.LocalSerial != 0) {
        LocalSerial = other.LocalSerial;
      }
      if (other.ServerSerial != 0) {
        ServerSerial = other.ServerSerial;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      menuControls_.Add(other.menuControls_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LocalSerial = input.ReadUInt32();
            break;
          }
          case 16: {
            ServerSerial = input.ReadUInt32();
            break;
          }
          case 24: {
            Height = input.ReadUInt32();
            break;
          }
          case 32: {
            Width = input.ReadUInt32();
            break;
          }
          case 42: {
            menuControls_.AddEntriesFrom(input, _repeated_menuControls_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcSkillList : pb::IMessage<GrpcSkillList> {
    private static readonly pb::MessageParser<GrpcSkillList> _parser = new pb::MessageParser<GrpcSkillList>(() => new GrpcSkillList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcSkillList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkillList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkillList(GrpcSkillList other) : this() {
      skills_ = other.skills_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSkillList Clone() {
      return new GrpcSkillList(this);
    }

    /// <summary>Field number for the "skills" field.</summary>
    public const int SkillsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcSkill> _repeated_skills_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcSkill.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcSkill> skills_ = new pbc::RepeatedField<global::Uoservice.GrpcSkill>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcSkill> Skills {
      get { return skills_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcSkillList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcSkillList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!skills_.Equals(other.skills_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= skills_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      skills_.WriteTo(output, _repeated_skills_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += skills_.CalculateSize(_repeated_skills_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcSkillList other) {
      if (other == null) {
        return;
      }
      skills_.Add(other.skills_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            skills_.AddEntriesFrom(input, _repeated_skills_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcBuffList : pb::IMessage<GrpcBuffList> {
    private static readonly pb::MessageParser<GrpcBuffList> _parser = new pb::MessageParser<GrpcBuffList>(() => new GrpcBuffList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcBuffList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBuffList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBuffList(GrpcBuffList other) : this() {
      buffs_ = other.buffs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcBuffList Clone() {
      return new GrpcBuffList(this);
    }

    /// <summary>Field number for the "buffs" field.</summary>
    public const int BuffsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcBuff> _repeated_buffs_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcBuff.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcBuff> buffs_ = new pbc::RepeatedField<global::Uoservice.GrpcBuff>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcBuff> Buffs {
      get { return buffs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcBuffList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcBuffList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!buffs_.Equals(other.buffs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= buffs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      buffs_.WriteTo(output, _repeated_buffs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += buffs_.CalculateSize(_repeated_buffs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcBuffList other) {
      if (other == null) {
        return;
      }
      buffs_.Add(other.buffs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            buffs_.AddEntriesFrom(input, _repeated_buffs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMobileObjectList : pb::IMessage<GrpcMobileObjectList> {
    private static readonly pb::MessageParser<GrpcMobileObjectList> _parser = new pb::MessageParser<GrpcMobileObjectList>(() => new GrpcMobileObjectList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileObjectList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList(GrpcMobileObjectList other) : this() {
      mobileObjects_ = other.mobileObjects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList Clone() {
      return new GrpcMobileObjectList(this);
    }

    /// <summary>Field number for the "mobileObjects" field.</summary>
    public const int MobileObjectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcMobileObject> _repeated_mobileObjects_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcMobileObject.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcMobileObject> mobileObjects_ = new pbc::RepeatedField<global::Uoservice.GrpcMobileObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcMobileObject> MobileObjects {
      get { return mobileObjects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileObjectList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileObjectList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mobileObjects_.Equals(other.mobileObjects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mobileObjects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mobileObjects_.WriteTo(output, _repeated_mobileObjects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mobileObjects_.CalculateSize(_repeated_mobileObjects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileObjectList other) {
      if (other == null) {
        return;
      }
      mobileObjects_.Add(other.mobileObjects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mobileObjects_.AddEntriesFrom(input, _repeated_mobileObjects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcItemObjectList : pb::IMessage<GrpcItemObjectList> {
    private static readonly pb::MessageParser<GrpcItemObjectList> _parser = new pb::MessageParser<GrpcItemObjectList>(() => new GrpcItemObjectList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcItemObjectList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectList(GrpcItemObjectList other) : this() {
      itemObjects_ = other.itemObjects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemObjectList Clone() {
      return new GrpcItemObjectList(this);
    }

    /// <summary>Field number for the "itemObjects" field.</summary>
    public const int ItemObjectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcItemObject> _repeated_itemObjects_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcItemObject.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcItemObject> itemObjects_ = new pbc::RepeatedField<global::Uoservice.GrpcItemObject>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcItemObject> ItemObjects {
      get { return itemObjects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcItemObjectList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcItemObjectList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemObjects_.Equals(other.itemObjects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemObjects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      itemObjects_.WriteTo(output, _repeated_itemObjects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemObjects_.CalculateSize(_repeated_itemObjects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcItemObjectList other) {
      if (other == null) {
        return;
      }
      itemObjects_.Add(other.itemObjects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemObjects_.AddEntriesFrom(input, _repeated_itemObjects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcPopupMenuList : pb::IMessage<GrpcPopupMenuList> {
    private static readonly pb::MessageParser<GrpcPopupMenuList> _parser = new pb::MessageParser<GrpcPopupMenuList>(() => new GrpcPopupMenuList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPopupMenuList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenuList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenuList(GrpcPopupMenuList other) : this() {
      menus_ = other.menus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPopupMenuList Clone() {
      return new GrpcPopupMenuList(this);
    }

    /// <summary>Field number for the "menus" field.</summary>
    public const int MenusFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcPopupMenu> _repeated_menus_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcPopupMenu.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcPopupMenu> menus_ = new pbc::RepeatedField<global::Uoservice.GrpcPopupMenu>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcPopupMenu> Menus {
      get { return menus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPopupMenuList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPopupMenuList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!menus_.Equals(other.menus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= menus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      menus_.WriteTo(output, _repeated_menus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += menus_.CalculateSize(_repeated_menus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPopupMenuList other) {
      if (other == null) {
        return;
      }
      menus_.Add(other.menus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            menus_.AddEntriesFrom(input, _repeated_menus_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcClilocList : pb::IMessage<GrpcClilocList> {
    private static readonly pb::MessageParser<GrpcClilocList> _parser = new pb::MessageParser<GrpcClilocList>(() => new GrpcClilocList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcClilocList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocList(GrpcClilocList other) : this() {
      clilocs_ = other.clilocs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcClilocList Clone() {
      return new GrpcClilocList(this);
    }

    /// <summary>Field number for the "clilocs" field.</summary>
    public const int ClilocsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcCliloc> _repeated_clilocs_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcCliloc.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcCliloc> clilocs_ = new pbc::RepeatedField<global::Uoservice.GrpcCliloc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcCliloc> Clilocs {
      get { return clilocs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcClilocList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcClilocList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clilocs_.Equals(other.clilocs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clilocs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clilocs_.WriteTo(output, _repeated_clilocs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clilocs_.CalculateSize(_repeated_clilocs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcClilocList other) {
      if (other == null) {
        return;
      }
      clilocs_.Add(other.clilocs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clilocs_.AddEntriesFrom(input, _repeated_clilocs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcVendorList : pb::IMessage<GrpcVendorList> {
    private static readonly pb::MessageParser<GrpcVendorList> _parser = new pb::MessageParser<GrpcVendorList>(() => new GrpcVendorList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcVendorList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVendorList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVendorList(GrpcVendorList other) : this() {
      vendors_ = other.vendors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcVendorList Clone() {
      return new GrpcVendorList(this);
    }

    /// <summary>Field number for the "vendors" field.</summary>
    public const int VendorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcVendor> _repeated_vendors_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcVendor.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcVendor> vendors_ = new pbc::RepeatedField<global::Uoservice.GrpcVendor>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcVendor> Vendors {
      get { return vendors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcVendorList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcVendorList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vendors_.Equals(other.vendors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vendors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vendors_.WriteTo(output, _repeated_vendors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vendors_.CalculateSize(_repeated_vendors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcVendorList other) {
      if (other == null) {
        return;
      }
      vendors_.Add(other.vendors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vendors_.AddEntriesFrom(input, _repeated_vendors_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SemaphoreAction : pb::IMessage<SemaphoreAction> {
    private static readonly pb::MessageParser<SemaphoreAction> _parser = new pb::MessageParser<SemaphoreAction>(() => new SemaphoreAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SemaphoreAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction(SemaphoreAction other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction Clone() {
      return new SemaphoreAction(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private string mode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SemaphoreAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SemaphoreAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SemaphoreAction other) {
      if (other == null) {
        return;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Config : pb::IMessage<Config> {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      init_ = other.init_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "init" field.</summary>
    public const int InitFieldNumber = 1;
    private bool init_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Init {
      get { return init_; }
      set {
        init_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Init != other.Init) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Init != false) hash ^= Init.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Init != false) {
        output.WriteRawTag(8);
        output.WriteBool(Init);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Init != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.Init != false) {
        Init = other.Init;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Init = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcDeleteItemSerialList : pb::IMessage<GrpcDeleteItemSerialList> {
    private static readonly pb::MessageParser<GrpcDeleteItemSerialList> _parser = new pb::MessageParser<GrpcDeleteItemSerialList>(() => new GrpcDeleteItemSerialList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDeleteItemSerialList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDeleteItemSerialList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDeleteItemSerialList(GrpcDeleteItemSerialList other) : this() {
      serials_ = other.serials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDeleteItemSerialList Clone() {
      return new GrpcDeleteItemSerialList(this);
    }

    /// <summary>Field number for the "serials" field.</summary>
    public const int SerialsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_serials_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> serials_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Serials {
      get { return serials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDeleteItemSerialList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDeleteItemSerialList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serials_.Equals(other.serials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serials_.WriteTo(output, _repeated_serials_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serials_.CalculateSize(_repeated_serials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDeleteItemSerialList other) {
      if (other == null) {
        return;
      }
      serials_.Add(other.serials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            serials_.AddEntriesFrom(input, _repeated_serials_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcDeleteMobileSerialList : pb::IMessage<GrpcDeleteMobileSerialList> {
    private static readonly pb::MessageParser<GrpcDeleteMobileSerialList> _parser = new pb::MessageParser<GrpcDeleteMobileSerialList>(() => new GrpcDeleteMobileSerialList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDeleteMobileSerialList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDeleteMobileSerialList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDeleteMobileSerialList(GrpcDeleteMobileSerialList other) : this() {
      serials_ = other.serials_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDeleteMobileSerialList Clone() {
      return new GrpcDeleteMobileSerialList(this);
    }

    /// <summary>Field number for the "serials" field.</summary>
    public const int SerialsFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_serials_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> serials_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Serials {
      get { return serials_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDeleteMobileSerialList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDeleteMobileSerialList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!serials_.Equals(other.serials_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= serials_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      serials_.WriteTo(output, _repeated_serials_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += serials_.CalculateSize(_repeated_serials_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDeleteMobileSerialList other) {
      if (other == null) {
        return;
      }
      serials_.Add(other.serials_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            serials_.AddEntriesFrom(input, _repeated_serials_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcStates : pb::IMessage<GrpcStates> {
    private static readonly pb::MessageParser<GrpcStates> _parser = new pb::MessageParser<GrpcStates>(() => new GrpcStates());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcStates> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcStates() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcStates(GrpcStates other) : this() {
      playerObject_ = other.playerObject_ != null ? other.playerObject_.Clone() : null;
      worldItemList_ = other.worldItemList_ != null ? other.worldItemList_.Clone() : null;
      worldMobileList_ = other.worldMobileList_ != null ? other.worldMobileList_.Clone() : null;
      popupMenuList_ = other.popupMenuList_ != null ? other.popupMenuList_.Clone() : null;
      clilocList_ = other.clilocList_ != null ? other.clilocList_.Clone() : null;
      playerStatus_ = other.playerStatus_ != null ? other.playerStatus_.Clone() : null;
      playerSkillList_ = other.playerSkillList_ != null ? other.playerSkillList_.Clone() : null;
      playerBuffList_ = other.playerBuffList_ != null ? other.playerBuffList_.Clone() : null;
      vendorList_ = other.vendorList_ != null ? other.vendorList_.Clone() : null;
      deleteItemSerialList_ = other.deleteItemSerialList_ != null ? other.deleteItemSerialList_.Clone() : null;
      deleteMobileSerialList_ = other.deleteMobileSerialList_ != null ? other.deleteMobileSerialList_.Clone() : null;
      menuControlList_ = other.menuControlList_ != null ? other.menuControlList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcStates Clone() {
      return new GrpcStates(this);
    }

    /// <summary>Field number for the "playerObject" field.</summary>
    public const int PlayerObjectFieldNumber = 1;
    private global::Uoservice.GrpcPlayerObject playerObject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcPlayerObject PlayerObject {
      get { return playerObject_; }
      set {
        playerObject_ = value;
      }
    }

    /// <summary>Field number for the "WorldItemList" field.</summary>
    public const int WorldItemListFieldNumber = 2;
    private global::Uoservice.GrpcItemObjectList worldItemList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcItemObjectList WorldItemList {
      get { return worldItemList_; }
      set {
        worldItemList_ = value;
      }
    }

    /// <summary>Field number for the "WorldMobileList" field.</summary>
    public const int WorldMobileListFieldNumber = 3;
    private global::Uoservice.GrpcMobileObjectList worldMobileList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcMobileObjectList WorldMobileList {
      get { return worldMobileList_; }
      set {
        worldMobileList_ = value;
      }
    }

    /// <summary>Field number for the "popupMenuList" field.</summary>
    public const int PopupMenuListFieldNumber = 4;
    private global::Uoservice.GrpcPopupMenuList popupMenuList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcPopupMenuList PopupMenuList {
      get { return popupMenuList_; }
      set {
        popupMenuList_ = value;
      }
    }

    /// <summary>Field number for the "clilocList" field.</summary>
    public const int ClilocListFieldNumber = 5;
    private global::Uoservice.GrpcClilocList clilocList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcClilocList ClilocList {
      get { return clilocList_; }
      set {
        clilocList_ = value;
      }
    }

    /// <summary>Field number for the "playerStatus" field.</summary>
    public const int PlayerStatusFieldNumber = 6;
    private global::Uoservice.GrpcPlayerStatus playerStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcPlayerStatus PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "playerSkillList" field.</summary>
    public const int PlayerSkillListFieldNumber = 7;
    private global::Uoservice.GrpcSkillList playerSkillList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcSkillList PlayerSkillList {
      get { return playerSkillList_; }
      set {
        playerSkillList_ = value;
      }
    }

    /// <summary>Field number for the "playerBuffList" field.</summary>
    public const int PlayerBuffListFieldNumber = 8;
    private global::Uoservice.GrpcBuffList playerBuffList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcBuffList PlayerBuffList {
      get { return playerBuffList_; }
      set {
        playerBuffList_ = value;
      }
    }

    /// <summary>Field number for the "vendorList" field.</summary>
    public const int VendorListFieldNumber = 9;
    private global::Uoservice.GrpcVendorList vendorList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcVendorList VendorList {
      get { return vendorList_; }
      set {
        vendorList_ = value;
      }
    }

    /// <summary>Field number for the "deleteItemSerialList" field.</summary>
    public const int DeleteItemSerialListFieldNumber = 10;
    private global::Uoservice.GrpcDeleteItemSerialList deleteItemSerialList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcDeleteItemSerialList DeleteItemSerialList {
      get { return deleteItemSerialList_; }
      set {
        deleteItemSerialList_ = value;
      }
    }

    /// <summary>Field number for the "deleteMobileSerialList" field.</summary>
    public const int DeleteMobileSerialListFieldNumber = 11;
    private global::Uoservice.GrpcDeleteMobileSerialList deleteMobileSerialList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcDeleteMobileSerialList DeleteMobileSerialList {
      get { return deleteMobileSerialList_; }
      set {
        deleteMobileSerialList_ = value;
      }
    }

    /// <summary>Field number for the "menuControlList" field.</summary>
    public const int MenuControlListFieldNumber = 12;
    private global::Uoservice.GrpcMenuControlList menuControlList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcMenuControlList MenuControlList {
      get { return menuControlList_; }
      set {
        menuControlList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcStates);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcStates other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerObject, other.PlayerObject)) return false;
      if (!object.Equals(WorldItemList, other.WorldItemList)) return false;
      if (!object.Equals(WorldMobileList, other.WorldMobileList)) return false;
      if (!object.Equals(PopupMenuList, other.PopupMenuList)) return false;
      if (!object.Equals(ClilocList, other.ClilocList)) return false;
      if (!object.Equals(PlayerStatus, other.PlayerStatus)) return false;
      if (!object.Equals(PlayerSkillList, other.PlayerSkillList)) return false;
      if (!object.Equals(PlayerBuffList, other.PlayerBuffList)) return false;
      if (!object.Equals(VendorList, other.VendorList)) return false;
      if (!object.Equals(DeleteItemSerialList, other.DeleteItemSerialList)) return false;
      if (!object.Equals(DeleteMobileSerialList, other.DeleteMobileSerialList)) return false;
      if (!object.Equals(MenuControlList, other.MenuControlList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerObject_ != null) hash ^= PlayerObject.GetHashCode();
      if (worldItemList_ != null) hash ^= WorldItemList.GetHashCode();
      if (worldMobileList_ != null) hash ^= WorldMobileList.GetHashCode();
      if (popupMenuList_ != null) hash ^= PopupMenuList.GetHashCode();
      if (clilocList_ != null) hash ^= ClilocList.GetHashCode();
      if (playerStatus_ != null) hash ^= PlayerStatus.GetHashCode();
      if (playerSkillList_ != null) hash ^= PlayerSkillList.GetHashCode();
      if (playerBuffList_ != null) hash ^= PlayerBuffList.GetHashCode();
      if (vendorList_ != null) hash ^= VendorList.GetHashCode();
      if (deleteItemSerialList_ != null) hash ^= DeleteItemSerialList.GetHashCode();
      if (deleteMobileSerialList_ != null) hash ^= DeleteMobileSerialList.GetHashCode();
      if (menuControlList_ != null) hash ^= MenuControlList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerObject);
      }
      if (worldItemList_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WorldItemList);
      }
      if (worldMobileList_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(WorldMobileList);
      }
      if (popupMenuList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PopupMenuList);
      }
      if (clilocList_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ClilocList);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerStatus);
      }
      if (playerSkillList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PlayerSkillList);
      }
      if (playerBuffList_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PlayerBuffList);
      }
      if (vendorList_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(VendorList);
      }
      if (deleteItemSerialList_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(DeleteItemSerialList);
      }
      if (deleteMobileSerialList_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DeleteMobileSerialList);
      }
      if (menuControlList_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(MenuControlList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerObject);
      }
      if (worldItemList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldItemList);
      }
      if (worldMobileList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldMobileList);
      }
      if (popupMenuList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PopupMenuList);
      }
      if (clilocList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClilocList);
      }
      if (playerStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStatus);
      }
      if (playerSkillList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerSkillList);
      }
      if (playerBuffList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerBuffList);
      }
      if (vendorList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VendorList);
      }
      if (deleteItemSerialList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteItemSerialList);
      }
      if (deleteMobileSerialList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteMobileSerialList);
      }
      if (menuControlList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MenuControlList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcStates other) {
      if (other == null) {
        return;
      }
      if (other.playerObject_ != null) {
        if (playerObject_ == null) {
          playerObject_ = new global::Uoservice.GrpcPlayerObject();
        }
        PlayerObject.MergeFrom(other.PlayerObject);
      }
      if (other.worldItemList_ != null) {
        if (worldItemList_ == null) {
          worldItemList_ = new global::Uoservice.GrpcItemObjectList();
        }
        WorldItemList.MergeFrom(other.WorldItemList);
      }
      if (other.worldMobileList_ != null) {
        if (worldMobileList_ == null) {
          worldMobileList_ = new global::Uoservice.GrpcMobileObjectList();
        }
        WorldMobileList.MergeFrom(other.WorldMobileList);
      }
      if (other.popupMenuList_ != null) {
        if (popupMenuList_ == null) {
          popupMenuList_ = new global::Uoservice.GrpcPopupMenuList();
        }
        PopupMenuList.MergeFrom(other.PopupMenuList);
      }
      if (other.clilocList_ != null) {
        if (clilocList_ == null) {
          clilocList_ = new global::Uoservice.GrpcClilocList();
        }
        ClilocList.MergeFrom(other.ClilocList);
      }
      if (other.playerStatus_ != null) {
        if (playerStatus_ == null) {
          playerStatus_ = new global::Uoservice.GrpcPlayerStatus();
        }
        PlayerStatus.MergeFrom(other.PlayerStatus);
      }
      if (other.playerSkillList_ != null) {
        if (playerSkillList_ == null) {
          playerSkillList_ = new global::Uoservice.GrpcSkillList();
        }
        PlayerSkillList.MergeFrom(other.PlayerSkillList);
      }
      if (other.playerBuffList_ != null) {
        if (playerBuffList_ == null) {
          playerBuffList_ = new global::Uoservice.GrpcBuffList();
        }
        PlayerBuffList.MergeFrom(other.PlayerBuffList);
      }
      if (other.vendorList_ != null) {
        if (vendorList_ == null) {
          vendorList_ = new global::Uoservice.GrpcVendorList();
        }
        VendorList.MergeFrom(other.VendorList);
      }
      if (other.deleteItemSerialList_ != null) {
        if (deleteItemSerialList_ == null) {
          deleteItemSerialList_ = new global::Uoservice.GrpcDeleteItemSerialList();
        }
        DeleteItemSerialList.MergeFrom(other.DeleteItemSerialList);
      }
      if (other.deleteMobileSerialList_ != null) {
        if (deleteMobileSerialList_ == null) {
          deleteMobileSerialList_ = new global::Uoservice.GrpcDeleteMobileSerialList();
        }
        DeleteMobileSerialList.MergeFrom(other.DeleteMobileSerialList);
      }
      if (other.menuControlList_ != null) {
        if (menuControlList_ == null) {
          menuControlList_ = new global::Uoservice.GrpcMenuControlList();
        }
        MenuControlList.MergeFrom(other.MenuControlList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerObject_ == null) {
              playerObject_ = new global::Uoservice.GrpcPlayerObject();
            }
            input.ReadMessage(playerObject_);
            break;
          }
          case 18: {
            if (worldItemList_ == null) {
              worldItemList_ = new global::Uoservice.GrpcItemObjectList();
            }
            input.ReadMessage(worldItemList_);
            break;
          }
          case 26: {
            if (worldMobileList_ == null) {
              worldMobileList_ = new global::Uoservice.GrpcMobileObjectList();
            }
            input.ReadMessage(worldMobileList_);
            break;
          }
          case 34: {
            if (popupMenuList_ == null) {
              popupMenuList_ = new global::Uoservice.GrpcPopupMenuList();
            }
            input.ReadMessage(popupMenuList_);
            break;
          }
          case 42: {
            if (clilocList_ == null) {
              clilocList_ = new global::Uoservice.GrpcClilocList();
            }
            input.ReadMessage(clilocList_);
            break;
          }
          case 50: {
            if (playerStatus_ == null) {
              playerStatus_ = new global::Uoservice.GrpcPlayerStatus();
            }
            input.ReadMessage(playerStatus_);
            break;
          }
          case 58: {
            if (playerSkillList_ == null) {
              playerSkillList_ = new global::Uoservice.GrpcSkillList();
            }
            input.ReadMessage(playerSkillList_);
            break;
          }
          case 66: {
            if (playerBuffList_ == null) {
              playerBuffList_ = new global::Uoservice.GrpcBuffList();
            }
            input.ReadMessage(playerBuffList_);
            break;
          }
          case 74: {
            if (vendorList_ == null) {
              vendorList_ = new global::Uoservice.GrpcVendorList();
            }
            input.ReadMessage(vendorList_);
            break;
          }
          case 82: {
            if (deleteItemSerialList_ == null) {
              deleteItemSerialList_ = new global::Uoservice.GrpcDeleteItemSerialList();
            }
            input.ReadMessage(deleteItemSerialList_);
            break;
          }
          case 90: {
            if (deleteMobileSerialList_ == null) {
              deleteMobileSerialList_ = new global::Uoservice.GrpcDeleteMobileSerialList();
            }
            input.ReadMessage(deleteMobileSerialList_);
            break;
          }
          case 98: {
            if (menuControlList_ == null) {
              menuControlList_ = new global::Uoservice.GrpcMenuControlList();
            }
            input.ReadMessage(menuControlList_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcAction : pb::IMessage<GrpcAction> {
    private static readonly pb::MessageParser<GrpcAction> _parser = new pb::MessageParser<GrpcAction>(() => new GrpcAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAction(GrpcAction other) : this() {
      actionType_ = other.actionType_;
      sourceSerial_ = other.sourceSerial_;
      targetSerial_ = other.targetSerial_;
      walkDirection_ = other.walkDirection_;
      index_ = other.index_;
      amount_ = other.amount_;
      run_ = other.run_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcAction Clone() {
      return new GrpcAction(this);
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private uint actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "sourceSerial" field.</summary>
    public const int SourceSerialFieldNumber = 2;
    private uint sourceSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SourceSerial {
      get { return sourceSerial_; }
      set {
        sourceSerial_ = value;
      }
    }

    /// <summary>Field number for the "targetSerial" field.</summary>
    public const int TargetSerialFieldNumber = 3;
    private uint targetSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TargetSerial {
      get { return targetSerial_; }
      set {
        targetSerial_ = value;
      }
    }

    /// <summary>Field number for the "walkDirection" field.</summary>
    public const int WalkDirectionFieldNumber = 4;
    private uint walkDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WalkDirection {
      get { return walkDirection_; }
      set {
        walkDirection_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 5;
    private uint index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    private uint amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "run" field.</summary>
    public const int RunFieldNumber = 7;
    private bool run_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Run {
      get { return run_; }
      set {
        run_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (SourceSerial != other.SourceSerial) return false;
      if (TargetSerial != other.TargetSerial) return false;
      if (WalkDirection != other.WalkDirection) return false;
      if (Index != other.Index) return false;
      if (Amount != other.Amount) return false;
      if (Run != other.Run) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (SourceSerial != 0) hash ^= SourceSerial.GetHashCode();
      if (TargetSerial != 0) hash ^= TargetSerial.GetHashCode();
      if (WalkDirection != 0) hash ^= WalkDirection.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (Run != false) hash ^= Run.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActionType);
      }
      if (SourceSerial != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(SourceSerial);
      }
      if (TargetSerial != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(TargetSerial);
      }
      if (WalkDirection != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(WalkDirection);
      }
      if (Index != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Index);
      }
      if (Amount != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Amount);
      }
      if (Run != false) {
        output.WriteRawTag(56);
        output.WriteBool(Run);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionType);
      }
      if (SourceSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SourceSerial);
      }
      if (TargetSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TargetSerial);
      }
      if (WalkDirection != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WalkDirection);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (Run != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcAction other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.SourceSerial != 0) {
        SourceSerial = other.SourceSerial;
      }
      if (other.TargetSerial != 0) {
        TargetSerial = other.TargetSerial;
      }
      if (other.WalkDirection != 0) {
        WalkDirection = other.WalkDirection;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.Run != false) {
        Run = other.Run;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = input.ReadUInt32();
            break;
          }
          case 16: {
            SourceSerial = input.ReadUInt32();
            break;
          }
          case 24: {
            TargetSerial = input.ReadUInt32();
            break;
          }
          case 32: {
            WalkDirection = input.ReadUInt32();
            break;
          }
          case 40: {
            Index = input.ReadUInt32();
            break;
          }
          case 48: {
            Amount = input.ReadUInt32();
            break;
          }
          case 56: {
            Run = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
