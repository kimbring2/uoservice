// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: UoService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Uoservice {

  /// <summary>Holder for reflection information generated from UoService.proto</summary>
  public static partial class UoServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for UoService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UoServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Vb1NlcnZpY2UucHJvdG8SCXVvc2VydmljZSIHCgVFbXB0eSJSCg5HcnBj",
            "TW9iaWxlRGF0YRIMCgRuYW1lGAEgASgJEgkKAXgYAiABKAISCQoBeRgDIAEo",
            "AhIMCgRyYWNlGAQgASgNEg4KBnNlcmlhbBgFIAEoDSJLCgxHcnBjSXRlbURh",
            "dGESDAoEbmFtZRgBIAEoCRINCgVsYXllchgCIAEoDRIOCgZzZXJpYWwYAyAB",
            "KA0SDgoGYW1vdW50GAQgASgNIkoKEkdycGNHYW1lT2JqZWN0RGF0YRIMCgR0",
            "eXBlGAEgASgJEgkKAXgYAiABKA0SCQoBeRgDIAEoDRIQCghkaXN0YW5jZRgE",
            "IAEoDSJHChJHcnBjTGFuZE9iamVjdExpc3QSMQoKbGFuZE9iamVjdBgBIAMo",
            "CzIdLnVvc2VydmljZS5HcnBjR2FtZU9iamVjdERhdGEiSwoUR3JwY01vYmls",
            "ZU9iamVjdExpc3QSMwoMbW9iaWxlT2JqZWN0GAEgAygLMh0udW9zZXJ2aWNl",
            "LkdycGNHYW1lT2JqZWN0RGF0YSIfCg9TZW1hcGhvcmVBY3Rpb24SDAoEbW9k",
            "ZRgBIAEoCSI7Cg5HcnBjTW9iaWxlTGlzdBIpCgZtb2JpbGUYASADKAsyGS51",
            "b3NlcnZpY2UuR3JwY01vYmlsZURhdGEiNQoMR3JwY0l0ZW1MaXN0EiUKBGl0",
            "ZW0YASADKAsyFy51b3NlcnZpY2UuR3JwY0l0ZW1EYXRhIhYKBkNvbmZpZxIM",
            "CgRuYW1lGAEgASgJIugBCgxQbGF5ZXJTdGF0dXMSCwoDc3RyGAEgASgNEgsK",
            "A2RleBgCIAEoDRIOCgZpbnRlbGwYAyABKA0SDAoEaGl0cxgEIAEoDRIPCgdo",
            "aXRzTWF4GAUgASgNEg8KB3N0YW1pbmEYBiABKA0SEgoKc3RhbWluYU1heBgH",
            "IAEoDRIMCgRtYW5hGAggASgNEg8KB21hbmFNYXgYCSABKA0SDAoEZ29sZBgK",
            "IAEoDRIaChJwaHlzaWNhbFJlc2lzdGFuY2UYCyABKA0SDgoGd2VpZ2h0GAwg",
            "ASgNEhEKCXdlaWdodE1heBgNIAEoDSLuAgoGU3RhdGVzEi0KCm1vYmlsZUxp",
            "c3QYASABKAsyGS51b3NlcnZpY2UuR3JwY01vYmlsZUxpc3QSLgoNd29ybGRJ",
            "dGVtTGlzdBgCIAEoCzIXLnVvc2VydmljZS5HcnBjSXRlbUxpc3QSMQoQZXF1",
            "aXBwZWRJdGVtTGlzdBgDIAEoCzIXLnVvc2VydmljZS5HcnBjSXRlbUxpc3QS",
            "MQoQYmFja3BhY2tJdGVtTGlzdBgEIAEoCzIXLnVvc2VydmljZS5HcnBjSXRl",
            "bUxpc3QSLQoMcGxheWVyU3RhdHVzGAUgASgLMhcudW9zZXJ2aWNlLlBsYXll",
            "clN0YXR1cxI1Cg5sYW5kT2JqZWN0TGlzdBgGIAEoCzIdLnVvc2VydmljZS5H",
            "cnBjTGFuZE9iamVjdExpc3QSOQoQbW9iaWxlT2JqZWN0TGlzdBgHIAEoCzIf",
            "LnVvc2VydmljZS5HcnBjTW9iaWxlT2JqZWN0TGlzdCIiCg1XYWxrRGlyZWN0",
            "aW9uEhEKCWRpcmVjdGlvbhgBIAEoDSJ4CgdBY3Rpb25zEhIKCmFjdGlvblR5",
            "cGUYASABKA0SFAoMbW9iaWxlU2VyaWFsGAIgASgNEhIKCml0ZW1TZXJpYWwY",
            "AyABKA0SLwoNd2Fsa0RpcmVjdGlvbhgEIAEoCzIYLnVvc2VydmljZS5XYWxr",
            "RGlyZWN0aW9uMqcCCglVb1NlcnZpY2USLQoFUmVzZXQSES51b3NlcnZpY2Uu",
            "Q29uZmlnGhEudW9zZXJ2aWNlLlN0YXRlcxIvCgdSZWFkT2JzEhEudW9zZXJ2",
            "aWNlLkNvbmZpZxoRLnVvc2VydmljZS5TdGF0ZXMSMAoIV3JpdGVBY3QSEi51",
            "b3NlcnZpY2UuQWN0aW9ucxoQLnVvc2VydmljZS5FbXB0eRJDChNBY3RTZW1h",
            "cGhvcmVDb250cm9sEhoudW9zZXJ2aWNlLlNlbWFwaG9yZUFjdGlvbhoQLnVv",
            "c2VydmljZS5FbXB0eRJDChNPYnNTZW1hcGhvcmVDb250cm9sEhoudW9zZXJ2",
            "aWNlLlNlbWFwaG9yZUFjdGlvbhoQLnVvc2VydmljZS5FbXB0eWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Empty), global::Uoservice.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileData), global::Uoservice.GrpcMobileData.Parser, new[]{ "Name", "X", "Y", "Race", "Serial" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcItemData), global::Uoservice.GrpcItemData.Parser, new[]{ "Name", "Layer", "Serial", "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcGameObjectData), global::Uoservice.GrpcGameObjectData.Parser, new[]{ "Type", "X", "Y", "Distance" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcLandObjectList), global::Uoservice.GrpcLandObjectList.Parser, new[]{ "LandObject" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileObjectList), global::Uoservice.GrpcMobileObjectList.Parser, new[]{ "MobileObject" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.SemaphoreAction), global::Uoservice.SemaphoreAction.Parser, new[]{ "Mode" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcMobileList), global::Uoservice.GrpcMobileList.Parser, new[]{ "Mobile" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.GrpcItemList), global::Uoservice.GrpcItemList.Parser, new[]{ "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Config), global::Uoservice.Config.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.PlayerStatus), global::Uoservice.PlayerStatus.Parser, new[]{ "Str", "Dex", "Intell", "Hits", "HitsMax", "Stamina", "StaminaMax", "Mana", "ManaMax", "Gold", "PhysicalResistance", "Weight", "WeightMax" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.States), global::Uoservice.States.Parser, new[]{ "MobileList", "WorldItemList", "EquippedItemList", "BackpackItemList", "PlayerStatus", "LandObjectList", "MobileObjectList" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.WalkDirection), global::Uoservice.WalkDirection.Parser, new[]{ "Direction" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Uoservice.Actions), global::Uoservice.Actions.Parser, new[]{ "ActionType", "MobileSerial", "ItemSerial", "WalkDirection" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GrpcMobileData : pb::IMessage<GrpcMobileData> {
    private static readonly pb::MessageParser<GrpcMobileData> _parser = new pb::MessageParser<GrpcMobileData>(() => new GrpcMobileData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileData(GrpcMobileData other) : this() {
      name_ = other.name_;
      x_ = other.x_;
      y_ = other.y_;
      race_ = other.race_;
      serial_ = other.serial_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileData Clone() {
      return new GrpcMobileData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "race" field.</summary>
    public const int RaceFieldNumber = 4;
    private uint race_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Race {
      get { return race_; }
      set {
        race_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 5;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (Race != other.Race) return false;
      if (Serial != other.Serial) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Race != 0) hash ^= Race.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (X != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Y);
      }
      if (Race != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Race);
      }
      if (Serial != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Serial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Race != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Race);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Race != 0) {
        Race = other.Race;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 21: {
            X = input.ReadFloat();
            break;
          }
          case 29: {
            Y = input.ReadFloat();
            break;
          }
          case 32: {
            Race = input.ReadUInt32();
            break;
          }
          case 40: {
            Serial = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcItemData : pb::IMessage<GrpcItemData> {
    private static readonly pb::MessageParser<GrpcItemData> _parser = new pb::MessageParser<GrpcItemData>(() => new GrpcItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemData(GrpcItemData other) : this() {
      name_ = other.name_;
      layer_ = other.layer_;
      serial_ = other.serial_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemData Clone() {
      return new GrpcItemData(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 2;
    private uint layer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "serial" field.</summary>
    public const int SerialFieldNumber = 3;
    private uint serial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Serial {
      get { return serial_; }
      set {
        serial_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 4;
    private uint amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Layer != other.Layer) return false;
      if (Serial != other.Serial) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Layer != 0) hash ^= Layer.GetHashCode();
      if (Serial != 0) hash ^= Serial.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Layer != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Layer);
      }
      if (Serial != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Serial);
      }
      if (Amount != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Layer != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Layer);
      }
      if (Serial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Serial);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcItemData other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Layer != 0) {
        Layer = other.Layer;
      }
      if (other.Serial != 0) {
        Serial = other.Serial;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Layer = input.ReadUInt32();
            break;
          }
          case 24: {
            Serial = input.ReadUInt32();
            break;
          }
          case 32: {
            Amount = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcGameObjectData : pb::IMessage<GrpcGameObjectData> {
    private static readonly pb::MessageParser<GrpcGameObjectData> _parser = new pb::MessageParser<GrpcGameObjectData>(() => new GrpcGameObjectData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcGameObjectData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcGameObjectData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcGameObjectData(GrpcGameObjectData other) : this() {
      type_ = other.type_;
      x_ = other.x_;
      y_ = other.y_;
      distance_ = other.distance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcGameObjectData Clone() {
      return new GrpcGameObjectData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 2;
    private uint x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 3;
    private uint y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "distance" field.</summary>
    public const int DistanceFieldNumber = 4;
    private uint distance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Distance {
      get { return distance_; }
      set {
        distance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcGameObjectData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcGameObjectData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Distance != other.Distance) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Distance != 0) hash ^= Distance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Type);
      }
      if (X != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Y);
      }
      if (Distance != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Distance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Y);
      }
      if (Distance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Distance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcGameObjectData other) {
      if (other == null) {
        return;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Distance != 0) {
        Distance = other.Distance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Type = input.ReadString();
            break;
          }
          case 16: {
            X = input.ReadUInt32();
            break;
          }
          case 24: {
            Y = input.ReadUInt32();
            break;
          }
          case 32: {
            Distance = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcLandObjectList : pb::IMessage<GrpcLandObjectList> {
    private static readonly pb::MessageParser<GrpcLandObjectList> _parser = new pb::MessageParser<GrpcLandObjectList>(() => new GrpcLandObjectList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcLandObjectList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcLandObjectList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcLandObjectList(GrpcLandObjectList other) : this() {
      landObject_ = other.landObject_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcLandObjectList Clone() {
      return new GrpcLandObjectList(this);
    }

    /// <summary>Field number for the "landObject" field.</summary>
    public const int LandObjectFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcGameObjectData> _repeated_landObject_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcGameObjectData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcGameObjectData> landObject_ = new pbc::RepeatedField<global::Uoservice.GrpcGameObjectData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcGameObjectData> LandObject {
      get { return landObject_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcLandObjectList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcLandObjectList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!landObject_.Equals(other.landObject_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= landObject_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      landObject_.WriteTo(output, _repeated_landObject_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += landObject_.CalculateSize(_repeated_landObject_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcLandObjectList other) {
      if (other == null) {
        return;
      }
      landObject_.Add(other.landObject_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            landObject_.AddEntriesFrom(input, _repeated_landObject_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMobileObjectList : pb::IMessage<GrpcMobileObjectList> {
    private static readonly pb::MessageParser<GrpcMobileObjectList> _parser = new pb::MessageParser<GrpcMobileObjectList>(() => new GrpcMobileObjectList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileObjectList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList(GrpcMobileObjectList other) : this() {
      mobileObject_ = other.mobileObject_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileObjectList Clone() {
      return new GrpcMobileObjectList(this);
    }

    /// <summary>Field number for the "mobileObject" field.</summary>
    public const int MobileObjectFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcGameObjectData> _repeated_mobileObject_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcGameObjectData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcGameObjectData> mobileObject_ = new pbc::RepeatedField<global::Uoservice.GrpcGameObjectData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcGameObjectData> MobileObject {
      get { return mobileObject_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileObjectList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileObjectList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mobileObject_.Equals(other.mobileObject_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mobileObject_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mobileObject_.WriteTo(output, _repeated_mobileObject_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mobileObject_.CalculateSize(_repeated_mobileObject_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileObjectList other) {
      if (other == null) {
        return;
      }
      mobileObject_.Add(other.mobileObject_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mobileObject_.AddEntriesFrom(input, _repeated_mobileObject_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SemaphoreAction : pb::IMessage<SemaphoreAction> {
    private static readonly pb::MessageParser<SemaphoreAction> _parser = new pb::MessageParser<SemaphoreAction>(() => new SemaphoreAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SemaphoreAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction(SemaphoreAction other) : this() {
      mode_ = other.mode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SemaphoreAction Clone() {
      return new SemaphoreAction(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private string mode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SemaphoreAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SemaphoreAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SemaphoreAction other) {
      if (other == null) {
        return;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcMobileList : pb::IMessage<GrpcMobileList> {
    private static readonly pb::MessageParser<GrpcMobileList> _parser = new pb::MessageParser<GrpcMobileList>(() => new GrpcMobileList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcMobileList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileList(GrpcMobileList other) : this() {
      mobile_ = other.mobile_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcMobileList Clone() {
      return new GrpcMobileList(this);
    }

    /// <summary>Field number for the "mobile" field.</summary>
    public const int MobileFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcMobileData> _repeated_mobile_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcMobileData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcMobileData> mobile_ = new pbc::RepeatedField<global::Uoservice.GrpcMobileData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcMobileData> Mobile {
      get { return mobile_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcMobileList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcMobileList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!mobile_.Equals(other.mobile_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= mobile_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      mobile_.WriteTo(output, _repeated_mobile_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += mobile_.CalculateSize(_repeated_mobile_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcMobileList other) {
      if (other == null) {
        return;
      }
      mobile_.Add(other.mobile_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            mobile_.AddEntriesFrom(input, _repeated_mobile_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrpcItemList : pb::IMessage<GrpcItemList> {
    private static readonly pb::MessageParser<GrpcItemList> _parser = new pb::MessageParser<GrpcItemList>(() => new GrpcItemList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcItemList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemList(GrpcItemList other) : this() {
      item_ = other.item_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcItemList Clone() {
      return new GrpcItemList(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Uoservice.GrpcItemData> _repeated_item_codec
        = pb::FieldCodec.ForMessage(10, global::Uoservice.GrpcItemData.Parser);
    private readonly pbc::RepeatedField<global::Uoservice.GrpcItemData> item_ = new pbc::RepeatedField<global::Uoservice.GrpcItemData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Uoservice.GrpcItemData> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcItemList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcItemList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!item_.Equals(other.item_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= item_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      item_.WriteTo(output, _repeated_item_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcItemList other) {
      if (other == null) {
        return;
      }
      item_.Add(other.item_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Config : pb::IMessage<Config> {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerStatus : pb::IMessage<PlayerStatus> {
    private static readonly pb::MessageParser<PlayerStatus> _parser = new pb::MessageParser<PlayerStatus>(() => new PlayerStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStatus(PlayerStatus other) : this() {
      str_ = other.str_;
      dex_ = other.dex_;
      intell_ = other.intell_;
      hits_ = other.hits_;
      hitsMax_ = other.hitsMax_;
      stamina_ = other.stamina_;
      staminaMax_ = other.staminaMax_;
      mana_ = other.mana_;
      manaMax_ = other.manaMax_;
      gold_ = other.gold_;
      physicalResistance_ = other.physicalResistance_;
      weight_ = other.weight_;
      weightMax_ = other.weightMax_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerStatus Clone() {
      return new PlayerStatus(this);
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 1;
    private uint str_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "dex" field.</summary>
    public const int DexFieldNumber = 2;
    private uint dex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Dex {
      get { return dex_; }
      set {
        dex_ = value;
      }
    }

    /// <summary>Field number for the "intell" field.</summary>
    public const int IntellFieldNumber = 3;
    private uint intell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Intell {
      get { return intell_; }
      set {
        intell_ = value;
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 4;
    private uint hits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hits {
      get { return hits_; }
      set {
        hits_ = value;
      }
    }

    /// <summary>Field number for the "hitsMax" field.</summary>
    public const int HitsMaxFieldNumber = 5;
    private uint hitsMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HitsMax {
      get { return hitsMax_; }
      set {
        hitsMax_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 6;
    private uint stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    /// <summary>Field number for the "staminaMax" field.</summary>
    public const int StaminaMaxFieldNumber = 7;
    private uint staminaMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint StaminaMax {
      get { return staminaMax_; }
      set {
        staminaMax_ = value;
      }
    }

    /// <summary>Field number for the "mana" field.</summary>
    public const int ManaFieldNumber = 8;
    private uint mana_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Mana {
      get { return mana_; }
      set {
        mana_ = value;
      }
    }

    /// <summary>Field number for the "manaMax" field.</summary>
    public const int ManaMaxFieldNumber = 9;
    private uint manaMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ManaMax {
      get { return manaMax_; }
      set {
        manaMax_ = value;
      }
    }

    /// <summary>Field number for the "gold" field.</summary>
    public const int GoldFieldNumber = 10;
    private uint gold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Gold {
      get { return gold_; }
      set {
        gold_ = value;
      }
    }

    /// <summary>Field number for the "physicalResistance" field.</summary>
    public const int PhysicalResistanceFieldNumber = 11;
    private uint physicalResistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PhysicalResistance {
      get { return physicalResistance_; }
      set {
        physicalResistance_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 12;
    private uint weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    /// <summary>Field number for the "weightMax" field.</summary>
    public const int WeightMaxFieldNumber = 13;
    private uint weightMax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint WeightMax {
      get { return weightMax_; }
      set {
        weightMax_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Str != other.Str) return false;
      if (Dex != other.Dex) return false;
      if (Intell != other.Intell) return false;
      if (Hits != other.Hits) return false;
      if (HitsMax != other.HitsMax) return false;
      if (Stamina != other.Stamina) return false;
      if (StaminaMax != other.StaminaMax) return false;
      if (Mana != other.Mana) return false;
      if (ManaMax != other.ManaMax) return false;
      if (Gold != other.Gold) return false;
      if (PhysicalResistance != other.PhysicalResistance) return false;
      if (Weight != other.Weight) return false;
      if (WeightMax != other.WeightMax) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Str != 0) hash ^= Str.GetHashCode();
      if (Dex != 0) hash ^= Dex.GetHashCode();
      if (Intell != 0) hash ^= Intell.GetHashCode();
      if (Hits != 0) hash ^= Hits.GetHashCode();
      if (HitsMax != 0) hash ^= HitsMax.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      if (StaminaMax != 0) hash ^= StaminaMax.GetHashCode();
      if (Mana != 0) hash ^= Mana.GetHashCode();
      if (ManaMax != 0) hash ^= ManaMax.GetHashCode();
      if (Gold != 0) hash ^= Gold.GetHashCode();
      if (PhysicalResistance != 0) hash ^= PhysicalResistance.GetHashCode();
      if (Weight != 0) hash ^= Weight.GetHashCode();
      if (WeightMax != 0) hash ^= WeightMax.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Str != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Str);
      }
      if (Dex != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Dex);
      }
      if (Intell != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Intell);
      }
      if (Hits != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Hits);
      }
      if (HitsMax != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(HitsMax);
      }
      if (Stamina != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Stamina);
      }
      if (StaminaMax != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(StaminaMax);
      }
      if (Mana != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Mana);
      }
      if (ManaMax != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(ManaMax);
      }
      if (Gold != 0) {
        output.WriteRawTag(80);
        output.WriteUInt32(Gold);
      }
      if (PhysicalResistance != 0) {
        output.WriteRawTag(88);
        output.WriteUInt32(PhysicalResistance);
      }
      if (Weight != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(Weight);
      }
      if (WeightMax != 0) {
        output.WriteRawTag(104);
        output.WriteUInt32(WeightMax);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Str != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Str);
      }
      if (Dex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Dex);
      }
      if (Intell != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Intell);
      }
      if (Hits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hits);
      }
      if (HitsMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HitsMax);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Stamina);
      }
      if (StaminaMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StaminaMax);
      }
      if (Mana != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Mana);
      }
      if (ManaMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ManaMax);
      }
      if (Gold != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Gold);
      }
      if (PhysicalResistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PhysicalResistance);
      }
      if (Weight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Weight);
      }
      if (WeightMax != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(WeightMax);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerStatus other) {
      if (other == null) {
        return;
      }
      if (other.Str != 0) {
        Str = other.Str;
      }
      if (other.Dex != 0) {
        Dex = other.Dex;
      }
      if (other.Intell != 0) {
        Intell = other.Intell;
      }
      if (other.Hits != 0) {
        Hits = other.Hits;
      }
      if (other.HitsMax != 0) {
        HitsMax = other.HitsMax;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
      if (other.StaminaMax != 0) {
        StaminaMax = other.StaminaMax;
      }
      if (other.Mana != 0) {
        Mana = other.Mana;
      }
      if (other.ManaMax != 0) {
        ManaMax = other.ManaMax;
      }
      if (other.Gold != 0) {
        Gold = other.Gold;
      }
      if (other.PhysicalResistance != 0) {
        PhysicalResistance = other.PhysicalResistance;
      }
      if (other.Weight != 0) {
        Weight = other.Weight;
      }
      if (other.WeightMax != 0) {
        WeightMax = other.WeightMax;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Str = input.ReadUInt32();
            break;
          }
          case 16: {
            Dex = input.ReadUInt32();
            break;
          }
          case 24: {
            Intell = input.ReadUInt32();
            break;
          }
          case 32: {
            Hits = input.ReadUInt32();
            break;
          }
          case 40: {
            HitsMax = input.ReadUInt32();
            break;
          }
          case 48: {
            Stamina = input.ReadUInt32();
            break;
          }
          case 56: {
            StaminaMax = input.ReadUInt32();
            break;
          }
          case 64: {
            Mana = input.ReadUInt32();
            break;
          }
          case 72: {
            ManaMax = input.ReadUInt32();
            break;
          }
          case 80: {
            Gold = input.ReadUInt32();
            break;
          }
          case 88: {
            PhysicalResistance = input.ReadUInt32();
            break;
          }
          case 96: {
            Weight = input.ReadUInt32();
            break;
          }
          case 104: {
            WeightMax = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class States : pb::IMessage<States> {
    private static readonly pb::MessageParser<States> _parser = new pb::MessageParser<States>(() => new States());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<States> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States(States other) : this() {
      mobileList_ = other.mobileList_ != null ? other.mobileList_.Clone() : null;
      worldItemList_ = other.worldItemList_ != null ? other.worldItemList_.Clone() : null;
      equippedItemList_ = other.equippedItemList_ != null ? other.equippedItemList_.Clone() : null;
      backpackItemList_ = other.backpackItemList_ != null ? other.backpackItemList_.Clone() : null;
      playerStatus_ = other.playerStatus_ != null ? other.playerStatus_.Clone() : null;
      landObjectList_ = other.landObjectList_ != null ? other.landObjectList_.Clone() : null;
      mobileObjectList_ = other.mobileObjectList_ != null ? other.mobileObjectList_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public States Clone() {
      return new States(this);
    }

    /// <summary>Field number for the "mobileList" field.</summary>
    public const int MobileListFieldNumber = 1;
    private global::Uoservice.GrpcMobileList mobileList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcMobileList MobileList {
      get { return mobileList_; }
      set {
        mobileList_ = value;
      }
    }

    /// <summary>Field number for the "worldItemList" field.</summary>
    public const int WorldItemListFieldNumber = 2;
    private global::Uoservice.GrpcItemList worldItemList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcItemList WorldItemList {
      get { return worldItemList_; }
      set {
        worldItemList_ = value;
      }
    }

    /// <summary>Field number for the "equippedItemList" field.</summary>
    public const int EquippedItemListFieldNumber = 3;
    private global::Uoservice.GrpcItemList equippedItemList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcItemList EquippedItemList {
      get { return equippedItemList_; }
      set {
        equippedItemList_ = value;
      }
    }

    /// <summary>Field number for the "backpackItemList" field.</summary>
    public const int BackpackItemListFieldNumber = 4;
    private global::Uoservice.GrpcItemList backpackItemList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcItemList BackpackItemList {
      get { return backpackItemList_; }
      set {
        backpackItemList_ = value;
      }
    }

    /// <summary>Field number for the "playerStatus" field.</summary>
    public const int PlayerStatusFieldNumber = 5;
    private global::Uoservice.PlayerStatus playerStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.PlayerStatus PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "landObjectList" field.</summary>
    public const int LandObjectListFieldNumber = 6;
    private global::Uoservice.GrpcLandObjectList landObjectList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcLandObjectList LandObjectList {
      get { return landObjectList_; }
      set {
        landObjectList_ = value;
      }
    }

    /// <summary>Field number for the "mobileObjectList" field.</summary>
    public const int MobileObjectListFieldNumber = 7;
    private global::Uoservice.GrpcMobileObjectList mobileObjectList_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.GrpcMobileObjectList MobileObjectList {
      get { return mobileObjectList_; }
      set {
        mobileObjectList_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as States);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(States other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MobileList, other.MobileList)) return false;
      if (!object.Equals(WorldItemList, other.WorldItemList)) return false;
      if (!object.Equals(EquippedItemList, other.EquippedItemList)) return false;
      if (!object.Equals(BackpackItemList, other.BackpackItemList)) return false;
      if (!object.Equals(PlayerStatus, other.PlayerStatus)) return false;
      if (!object.Equals(LandObjectList, other.LandObjectList)) return false;
      if (!object.Equals(MobileObjectList, other.MobileObjectList)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mobileList_ != null) hash ^= MobileList.GetHashCode();
      if (worldItemList_ != null) hash ^= WorldItemList.GetHashCode();
      if (equippedItemList_ != null) hash ^= EquippedItemList.GetHashCode();
      if (backpackItemList_ != null) hash ^= BackpackItemList.GetHashCode();
      if (playerStatus_ != null) hash ^= PlayerStatus.GetHashCode();
      if (landObjectList_ != null) hash ^= LandObjectList.GetHashCode();
      if (mobileObjectList_ != null) hash ^= MobileObjectList.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (mobileList_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MobileList);
      }
      if (worldItemList_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WorldItemList);
      }
      if (equippedItemList_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EquippedItemList);
      }
      if (backpackItemList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BackpackItemList);
      }
      if (playerStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerStatus);
      }
      if (landObjectList_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LandObjectList);
      }
      if (mobileObjectList_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(MobileObjectList);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mobileList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MobileList);
      }
      if (worldItemList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorldItemList);
      }
      if (equippedItemList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquippedItemList);
      }
      if (backpackItemList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackpackItemList);
      }
      if (playerStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStatus);
      }
      if (landObjectList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LandObjectList);
      }
      if (mobileObjectList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MobileObjectList);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(States other) {
      if (other == null) {
        return;
      }
      if (other.mobileList_ != null) {
        if (mobileList_ == null) {
          mobileList_ = new global::Uoservice.GrpcMobileList();
        }
        MobileList.MergeFrom(other.MobileList);
      }
      if (other.worldItemList_ != null) {
        if (worldItemList_ == null) {
          worldItemList_ = new global::Uoservice.GrpcItemList();
        }
        WorldItemList.MergeFrom(other.WorldItemList);
      }
      if (other.equippedItemList_ != null) {
        if (equippedItemList_ == null) {
          equippedItemList_ = new global::Uoservice.GrpcItemList();
        }
        EquippedItemList.MergeFrom(other.EquippedItemList);
      }
      if (other.backpackItemList_ != null) {
        if (backpackItemList_ == null) {
          backpackItemList_ = new global::Uoservice.GrpcItemList();
        }
        BackpackItemList.MergeFrom(other.BackpackItemList);
      }
      if (other.playerStatus_ != null) {
        if (playerStatus_ == null) {
          playerStatus_ = new global::Uoservice.PlayerStatus();
        }
        PlayerStatus.MergeFrom(other.PlayerStatus);
      }
      if (other.landObjectList_ != null) {
        if (landObjectList_ == null) {
          landObjectList_ = new global::Uoservice.GrpcLandObjectList();
        }
        LandObjectList.MergeFrom(other.LandObjectList);
      }
      if (other.mobileObjectList_ != null) {
        if (mobileObjectList_ == null) {
          mobileObjectList_ = new global::Uoservice.GrpcMobileObjectList();
        }
        MobileObjectList.MergeFrom(other.MobileObjectList);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mobileList_ == null) {
              mobileList_ = new global::Uoservice.GrpcMobileList();
            }
            input.ReadMessage(mobileList_);
            break;
          }
          case 18: {
            if (worldItemList_ == null) {
              worldItemList_ = new global::Uoservice.GrpcItemList();
            }
            input.ReadMessage(worldItemList_);
            break;
          }
          case 26: {
            if (equippedItemList_ == null) {
              equippedItemList_ = new global::Uoservice.GrpcItemList();
            }
            input.ReadMessage(equippedItemList_);
            break;
          }
          case 34: {
            if (backpackItemList_ == null) {
              backpackItemList_ = new global::Uoservice.GrpcItemList();
            }
            input.ReadMessage(backpackItemList_);
            break;
          }
          case 42: {
            if (playerStatus_ == null) {
              playerStatus_ = new global::Uoservice.PlayerStatus();
            }
            input.ReadMessage(playerStatus_);
            break;
          }
          case 50: {
            if (landObjectList_ == null) {
              landObjectList_ = new global::Uoservice.GrpcLandObjectList();
            }
            input.ReadMessage(landObjectList_);
            break;
          }
          case 58: {
            if (mobileObjectList_ == null) {
              mobileObjectList_ = new global::Uoservice.GrpcMobileObjectList();
            }
            input.ReadMessage(mobileObjectList_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WalkDirection : pb::IMessage<WalkDirection> {
    private static readonly pb::MessageParser<WalkDirection> _parser = new pb::MessageParser<WalkDirection>(() => new WalkDirection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WalkDirection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalkDirection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalkDirection(WalkDirection other) : this() {
      direction_ = other.direction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WalkDirection Clone() {
      return new WalkDirection(this);
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 1;
    private uint direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WalkDirection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WalkDirection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Direction != other.Direction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Direction != 0) hash ^= Direction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Direction != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Direction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Direction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Direction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WalkDirection other) {
      if (other == null) {
        return;
      }
      if (other.Direction != 0) {
        Direction = other.Direction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Direction = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Actions : pb::IMessage<Actions> {
    private static readonly pb::MessageParser<Actions> _parser = new pb::MessageParser<Actions>(() => new Actions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Actions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Uoservice.UoServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Actions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Actions(Actions other) : this() {
      actionType_ = other.actionType_;
      mobileSerial_ = other.mobileSerial_;
      itemSerial_ = other.itemSerial_;
      walkDirection_ = other.walkDirection_ != null ? other.walkDirection_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Actions Clone() {
      return new Actions(this);
    }

    /// <summary>Field number for the "actionType" field.</summary>
    public const int ActionTypeFieldNumber = 1;
    private uint actionType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ActionType {
      get { return actionType_; }
      set {
        actionType_ = value;
      }
    }

    /// <summary>Field number for the "mobileSerial" field.</summary>
    public const int MobileSerialFieldNumber = 2;
    private uint mobileSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MobileSerial {
      get { return mobileSerial_; }
      set {
        mobileSerial_ = value;
      }
    }

    /// <summary>Field number for the "itemSerial" field.</summary>
    public const int ItemSerialFieldNumber = 3;
    private uint itemSerial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ItemSerial {
      get { return itemSerial_; }
      set {
        itemSerial_ = value;
      }
    }

    /// <summary>Field number for the "walkDirection" field.</summary>
    public const int WalkDirectionFieldNumber = 4;
    private global::Uoservice.WalkDirection walkDirection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Uoservice.WalkDirection WalkDirection {
      get { return walkDirection_; }
      set {
        walkDirection_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Actions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Actions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionType != other.ActionType) return false;
      if (MobileSerial != other.MobileSerial) return false;
      if (ItemSerial != other.ItemSerial) return false;
      if (!object.Equals(WalkDirection, other.WalkDirection)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionType != 0) hash ^= ActionType.GetHashCode();
      if (MobileSerial != 0) hash ^= MobileSerial.GetHashCode();
      if (ItemSerial != 0) hash ^= ItemSerial.GetHashCode();
      if (walkDirection_ != null) hash ^= WalkDirection.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ActionType != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ActionType);
      }
      if (MobileSerial != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MobileSerial);
      }
      if (ItemSerial != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ItemSerial);
      }
      if (walkDirection_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WalkDirection);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ActionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ActionType);
      }
      if (MobileSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MobileSerial);
      }
      if (ItemSerial != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ItemSerial);
      }
      if (walkDirection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WalkDirection);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Actions other) {
      if (other == null) {
        return;
      }
      if (other.ActionType != 0) {
        ActionType = other.ActionType;
      }
      if (other.MobileSerial != 0) {
        MobileSerial = other.MobileSerial;
      }
      if (other.ItemSerial != 0) {
        ItemSerial = other.ItemSerial;
      }
      if (other.walkDirection_ != null) {
        if (walkDirection_ == null) {
          walkDirection_ = new global::Uoservice.WalkDirection();
        }
        WalkDirection.MergeFrom(other.WalkDirection);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ActionType = input.ReadUInt32();
            break;
          }
          case 16: {
            MobileSerial = input.ReadUInt32();
            break;
          }
          case 24: {
            ItemSerial = input.ReadUInt32();
            break;
          }
          case 34: {
            if (walkDirection_ == null) {
              walkDirection_ = new global::Uoservice.WalkDirection();
            }
            input.ReadMessage(walkDirection_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
