# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import UoService_pb2 as UoService__pb2


class UoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Reset = channel.unary_unary(
                '/uoservice.UoService/Reset',
                request_serializer=UoService__pb2.Config.SerializeToString,
                response_deserializer=UoService__pb2.States.FromString,
                )
        self.ReadObs = channel.unary_unary(
                '/uoservice.UoService/ReadObs',
                request_serializer=UoService__pb2.Config.SerializeToString,
                response_deserializer=UoService__pb2.States.FromString,
                )
        self.WriteAct = channel.unary_unary(
                '/uoservice.UoService/WriteAct',
                request_serializer=UoService__pb2.Actions.SerializeToString,
                response_deserializer=UoService__pb2.Empty.FromString,
                )
        self.ActSemaphoreControl = channel.unary_unary(
                '/uoservice.UoService/ActSemaphoreControl',
                request_serializer=UoService__pb2.SemaphoreAction.SerializeToString,
                response_deserializer=UoService__pb2.Empty.FromString,
                )
        self.ObsSemaphoreControl = channel.unary_unary(
                '/uoservice.UoService/ObsSemaphoreControl',
                request_serializer=UoService__pb2.SemaphoreAction.SerializeToString,
                response_deserializer=UoService__pb2.Empty.FromString,
                )
        self.ReadReplay = channel.unary_unary(
                '/uoservice.UoService/ReadReplay',
                request_serializer=UoService__pb2.Config.SerializeToString,
                response_deserializer=UoService__pb2.States.FromString,
                )
        self.ReadMPQFile = channel.unary_unary(
                '/uoservice.UoService/ReadMPQFile',
                request_serializer=UoService__pb2.Config.SerializeToString,
                response_deserializer=UoService__pb2.Empty.FromString,
                )


class UoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Reset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadObs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteAct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActSemaphoreControl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ObsSemaphoreControl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadReplay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadMPQFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Reset': grpc.unary_unary_rpc_method_handler(
                    servicer.Reset,
                    request_deserializer=UoService__pb2.Config.FromString,
                    response_serializer=UoService__pb2.States.SerializeToString,
            ),
            'ReadObs': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadObs,
                    request_deserializer=UoService__pb2.Config.FromString,
                    response_serializer=UoService__pb2.States.SerializeToString,
            ),
            'WriteAct': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteAct,
                    request_deserializer=UoService__pb2.Actions.FromString,
                    response_serializer=UoService__pb2.Empty.SerializeToString,
            ),
            'ActSemaphoreControl': grpc.unary_unary_rpc_method_handler(
                    servicer.ActSemaphoreControl,
                    request_deserializer=UoService__pb2.SemaphoreAction.FromString,
                    response_serializer=UoService__pb2.Empty.SerializeToString,
            ),
            'ObsSemaphoreControl': grpc.unary_unary_rpc_method_handler(
                    servicer.ObsSemaphoreControl,
                    request_deserializer=UoService__pb2.SemaphoreAction.FromString,
                    response_serializer=UoService__pb2.Empty.SerializeToString,
            ),
            'ReadReplay': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadReplay,
                    request_deserializer=UoService__pb2.Config.FromString,
                    response_serializer=UoService__pb2.States.SerializeToString,
            ),
            'ReadMPQFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadMPQFile,
                    request_deserializer=UoService__pb2.Config.FromString,
                    response_serializer=UoService__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'uoservice.UoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class UoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Reset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/Reset',
            UoService__pb2.Config.SerializeToString,
            UoService__pb2.States.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadObs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/ReadObs',
            UoService__pb2.Config.SerializeToString,
            UoService__pb2.States.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteAct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/WriteAct',
            UoService__pb2.Actions.SerializeToString,
            UoService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActSemaphoreControl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/ActSemaphoreControl',
            UoService__pb2.SemaphoreAction.SerializeToString,
            UoService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ObsSemaphoreControl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/ObsSemaphoreControl',
            UoService__pb2.SemaphoreAction.SerializeToString,
            UoService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadReplay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/ReadReplay',
            UoService__pb2.Config.SerializeToString,
            UoService__pb2.States.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadMPQFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uoservice.UoService/ReadMPQFile',
            UoService__pb2.Config.SerializeToString,
            UoService__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
